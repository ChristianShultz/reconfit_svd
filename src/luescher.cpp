#include "luescher.h"

LuescherPhaseShift::LuescherPhaseShift(string irrep_, EnsemReal mA_, EnsemReal mB_, double L_) : irrep(irrep_), mA(mA_), mB(mB_), L(L_)
{
   if(irrep == "A1p"){ang_mom = 0;}
   else if((irrep == "T2p")||(irrep == "Ep")){ang_mom = 2;}
   else if(irrep == "T1p"){ang_mom = 4;}
   else{ cerr << "This irrep not coded" << endl; exit(1);}			
};

EnsemReal LuescherPhaseShift::k(EnsemReal E){
  return sqrt( E*E - (mA + mB)*(mA + mB) ) * sqrt( E*E - (mA - mB)*(mA - mB) ) / (Real(2.0) * E);
};

EnsemReal LuescherPhaseShift::q(EnsemReal E){
  double pi = 2.0 * atan2(1.0 , 0.0);
  return k(E) * Real(L / (2.0 * pi));
};

EnsemReal LuescherPhaseShift::phi(EnsemReal E){

  EnsemReal qq = q(E);
  EnsemReal q_scale = rescaleEnsemDown(qq);
    
  EnsemReal phi = Real(0.0)*qq;
   
  for(int cfg = 0; cfg < qq.size(); cfg++){
    double Q = toDouble(peekEnsem(q_scale , cfg) );
    double tmp = phi_sigma.phi(irrep, Q);
    pokeEnsem(phi, Real(tmp), cfg);
  }
  
  return rescaleEnsemUp(phi);
};

EnsemReal LuescherPhaseShift::sigma(EnsemReal E){

  EnsemReal qq = q(E);
  EnsemReal q_scale = rescaleEnsemDown(qq);

  EnsemReal sigma = Real(0.0)*qq;

  for(int cfg = 0; cfg < qq.size(); cfg++){
    double Q = toDouble(peekEnsem(q_scale , cfg) );
    double tmp = phi_sigma.sigma(irrep, Q);
    pokeEnsem(sigma, Real(tmp), cfg);
  }

  return rescaleEnsemUp(sigma);
};  

EnsemReal LuescherPhaseShift::delta(EnsemReal E){
  //always shifts into -pi to pi region, cfg by cfg
  double pi = 2.0 * atan2(1.0 , 0.0);

  EnsemReal qq = q(E);
  EnsemReal q_scale = rescaleEnsemDown(qq);

  EnsemReal delta = Real(0.0) * q_scale;

  for(int cfg = 0; cfg < qq.size(); cfg++){
    double Q = toDouble( peekEnsem(q_scale , cfg) );
    double tmp = - phi_sigma.phi(irrep, Q);
    double tmp2 = fmod(tmp , pi); //shifts into the -pi to pi region

    pokeEnsem(delta, Real(tmp2), cfg);
  }

  return rescaleEnsemUp(delta);
};

EnsemReal LuescherPhaseShift::delta_corrected(EnsemReal E, EnsemReal tan_delta4){
  //always shifts into -pi to pi region, cfg by	cfg
  double pi = 2.0 * atan2(1.0 , 0.0);
  
  if(toDouble(mean(tan_delta4)) > 0.25){ cerr << "tan_delta4 = " << toDouble(mean(tan_delta4)) << " might not be perturbative" << endl;}	

  EnsemReal qq = q(E);
  EnsemReal q_scale = rescaleEnsemDown(qq);
  EnsemReal t4_scale = rescaleEnsemDown(tan_delta4);	

  EnsemReal delta = Real(0.0) * q_scale;
  
  for(int cfg = 0; cfg < qq.size(); cfg++){
    double Q = toDouble( peekEnsem(q_scale , cfg) );
    double T4 = toDouble( peekEnsem(t4_scale , cfg) );
 	
    double tmp = - phi_sigma.phi(irrep, Q) - phi_sigma.sigma(irrep, Q)*T4;
    double tmp2 = fmod(tmp , pi); //shifts into the -pi to pi region
  
    pokeEnsem(delta, Real(tmp2), cfg);
  }
    
  return rescaleEnsemUp(delta);
};

EnsemReal LuescherPhaseShift::delta_corrected(EnsemReal E, double tan_delta4){
  //always shifts into -pi to pi region, cfg by	cfg
  double pi = 2.0 * atan2(1.0 , 0.0);

  if( tan_delta4 > 0.25){ cerr << "tan_delta4 = " << tan_delta4 << " might not be perturbative" << endl;}
  
  EnsemReal qq = q(E);
  EnsemReal q_scale = rescaleEnsemDown(qq);

  EnsemReal delta = Real(0.0) * q_scale;
  
  for(int cfg = 0; cfg < qq.size(); cfg++){
    double Q = toDouble( peekEnsem(q_scale , cfg) );

    double tmp = - phi_sigma.phi(irrep, Q) - phi_sigma.sigma(irrep, Q)*tan_delta4;
    double tmp2 = fmod(tmp , pi); //shifts into the -pi to pi region
  
    pokeEnsem(delta, Real(tmp2), cfg);
  }
    
  return rescaleEnsemUp(delta);
};

vector<EnsemReal> LuescherPhaseShift::delta_corrected(EnsemReal E, double tan_delta4, double tan_delta4_error){
  //always shifts into -pi to pi region, cfg by	cfg
  double pi = 2.0 * atan2(1.0 , 0.0);

  if( tan_delta4 > 0.25){ cerr << "tan_delta4 = " << tan_delta4 << " might not be perturbative" << endl;}
  
  EnsemReal qq = q(E);
  EnsemReal q_scale = rescaleEnsemDown(qq);

  EnsemReal delta = Real(0.0) * q_scale;
  
  vector<double> t4; t4.push_back(tan_delta4 - tan_delta4_error); t4.push_back(tan_delta4); t4.push_back(tan_delta4 + tan_delta4_error);
  vector<EnsemReal> dum;

  for(int i=0; i < 3; i++){
    for(int cfg = 0; cfg < qq.size(); cfg++){
      double Q = toDouble( peekEnsem(q_scale , cfg) );

      double tmp = - phi_sigma.phi(irrep, Q) - phi_sigma.sigma(irrep, Q)*t4[i];
      double tmp2 = fmod(tmp , pi); //shifts into the -pi to pi region
  
      pokeEnsem(delta, Real(tmp2), cfg);
    }
    dum.push_back(rescaleEnsemUp(delta));
  }

  return(dum);
};





//******************************************************************

LuescherPhiSigma::LuescherPhiSigma(){
  //set up the weights
  vector<double> tmp(4);
  
  //A1p
  tmp[0] = 1.0; tmp[1] = 0.0; tmp[2] = 0.0; tmp[3] = 0.0; 
  mll_weights["A1p"] = tmp;
  
  tmp[0] = 0.0; tmp[1] = 6.0*sqrt(21.0)/7.0;
  ml4_weights["A1p"] = tmp;
  
  tmp[0] = 1.0; tmp[1] = 324.0/143.0; tmp[2] = 80.0/11.0; tmp[3] = 560.0/143.0;
  m44_weights["A1p"] = tmp;

  //Ep
  tmp[0] = 1.0; tmp[1] = 18.0/7.0; tmp[2] = 0.0; tmp[3] = 0.0;
  mll_weights["Ep"] = tmp;

  tmp[0] = 0.0; tmp[1] = - (120.0/77.0)*sqrt(3.0); tmp[2] = -(30.0/11.0)*sqrt(3.0); tmp[3] = 0.0;
  ml4_weights["Ep"] = tmp;

  tmp[0] = 1.0; tmp[1] = (324.0/1001.0); tmp[2] = - (64.0/11.0); tmp[3] = (392.0/143.0);
  m44_weights["Ep"] = tmp;

  //T2p
  tmp[0] = 1.0; tmp[1] = - (12.0/7.0); tmp[2] = 0.0; tmp[3] = 0.0;				
  mll_weights["T2p"] = tmp;

  tmp[0] = 0.0; tmp[1] = -(60.0/77.0)*sqrt(3.0); tmp[2] = (40.0/11.0)*sqrt(3.0); tmp[3] = 0.0;
  ml4_weights["T2p"] = tmp;

  tmp[0] = 1.0; tmp[1] = -(162.0/77.0); tmp[2] = (20.0/11.0); tmp[3] = 0.0;
  m44_weights["T2p"] = tmp;

  //T1p
  tmp[0] = 1.0; tmp[1] = (162.0/143.0); tmp[2] = -(4.0/11.0); tmp[3] = -(448.0/143.0);
  mll_weights["T1p"] = tmp;

  tmp[0] = 0.0; tmp[1] = 0.0; tmp[2] = 0.0; tmp[3] = 0.0;
  ml4_weights["T1p"] = tmp;

  tmp[0] = 0.0;	tmp[1] = 0.0; tmp[2] = 0.0; tmp[3] = 0.0;
  m44_weights["T1p"] = tmp;	

  //  cout << "constructed LuescherPhiSigma" << endl;

};

double LuescherPhiSigma::phi(string irrep, double q){
  double qsq = q*q;

  //phi = -0.5 * arcTan(2*mll / (mll^2 - 1 ) )

  vector<double> weights = mll_weights[irrep];
  //  cout << "got the weights" << endl;


  //not very efficient
  double m = weights[0] * w00(qsq) + weights[1] * w40(qsq) + weights[2] * w60(qsq) + weights[3] * w80(qsq);

  double phi = -0.5 * atan2( 2.0 * m , m*m - 1.0 ); //determined up to shifts n*pi

  return phi;
};

double LuescherPhiSigma::sigma(string irrep, double q){
  double qsq = q*q;

  vector<double> weights = mll_weights[irrep];
  double mll = weights[0] * w00(qsq) + weights[1] * w40(qsq) + weights[2] * w60(qsq) + weights[3] * w80(qsq);

  vector<double> weights2 = ml4_weights[irrep];
  double ml4 = weights2[0] * w00(qsq) + weights2[1] * w40(qsq) + weights2[2] * w60(qsq) + weights2[3] * w80(qsq);

  double sigma = ml4 * ml4 / ( 1.0 + mll*mll);

  return sigma;
};




LuescherW00::LuescherW00(){

  // 0->1
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);
    
    x[0] = 0.00100; x[1] = 0.00350; x[2] = 0.00600; x[3] = 0.00850; x[4] = 0.01100; 
    x[5] = 0.01350; x[6] = 0.01600; x[7] = 0.01850; x[8] = 0.02100; x[9] = 0.02350; 
    x[10] = 0.02600; x[11] = 0.02850; x[12] = 0.03100; x[13] = 0.03350; x[14] = 0.03600; 
    x[15] = 0.03850; x[16] = 0.04100; x[17] = 0.04350; x[18] = 0.04600; x[19] = 0.04850; 
    x[20] = 0.05100; x[21] = 0.06100; x[22] = 0.07100; x[23] = 0.08100; x[24] = 0.09100; 
    x[25] = 0.10100; x[26] = 0.11000; x[27] = 0.14000; x[28] = 0.17000; x[29] = 0.20000; 
    x[30] = 0.23000; x[31] = 0.26000; x[32] = 0.29000; x[33] = 0.32000; x[34] = 0.35000; 
    x[35] = 0.38000; x[36] = 0.41000; x[37] = 0.44000; x[38] = 0.47000; x[39] = 0.50000; 
    x[40] = 0.53000; x[41] = 0.56000; x[42] = 0.59000; x[43] = 0.62000; x[44] = 0.65000; 
    x[45] = 0.68000; x[46] = 0.71000; x[47] = 0.74000; x[48] = 0.77000; x[49] = 0.80000; 
    x[50] = 0.83000; x[51] = 0.86000; x[52] = 0.89000; x[53] = 0.90900; x[54] = 0.91900; 
    x[55] = 0.92900; x[56] = 0.93900; x[57] = 0.94900; x[58] = 0.95900; x[59] = 0.96900; 
    x[60] = 0.97150; x[61] = 0.97400; x[62] = 0.97650; x[63] = 0.97900; x[64] = 0.98150; 
    x[65] = 0.98400; x[66] = 0.98650; x[67] = 0.98900; x[68] = 0.99150; x[69] = 0.99400; 
    x[70] = 0.99650; x[71] = 0.99900; 
    
    y[0] = -1616.282071; y[1] = -252.246281; y[2] = -114.768946; y[3] = -69.466476; y[4] = -48.129042; 
    y[5] = -36.086086; y[6] = -28.494881; y[7] = -23.338220; y[8] = -19.640666; y[9] = -16.878474; 
    y[10] = -14.747651; y[11] = -13.060782; y[12] = -11.696619; y[13] = -10.573568; y[14] = -9.634890; 
    y[15] = -8.840013; y[16] = -8.159227; y[17] = -7.570323; y[18] = -7.056391; y[19] = -6.604352; 
    y[20] = -6.203943; y[21] = -4.977357; y[22] = -4.140825; y[23] = -3.535347; y[24] = -3.077128; 
    y[25] = -2.718114; y[26] = -2.455276; y[27] = -1.835354; y[28] = -1.437849; y[29] = -1.155784; 
    y[30] = -0.940886; y[31] = -0.768216; y[32] = -0.623557; y[33] = -0.498167; y[34] = -0.386313; 
    y[35] = -0.284023; y[36] = -0.188388; y[37] = -0.097159; y[38] = -0.008487; y[39] = 0.079248; 
    y[40] = 0.167574; y[41] = 0.258036; y[42] = 0.352319; y[43] = 0.452374; y[44] = 0.560606; 
    y[45] = 0.680134; y[46] = 0.815198; y[47] = 0.971850; y[48] = 1.159152; y[49] = 1.391474; 
    y[50] = 1.693188; y[51] = 2.109412; y[52] = 2.734326; y[53] = 3.331939; y[54] = 3.755173; 
    y[55] = 4.294562; y[56] = 5.007241; y[57] = 5.995151; y[58] = 7.459682; y[59] = 9.862080; 
    y[60] = 10.724910; y[61] = 11.753148; y[62] = 12.999583; y[63] = 14.542140; y[64] = 16.500871; 
    y[65] = 19.070856; y[66] = 22.591678; y[67] = 27.711637; y[68] = 35.841734; y[69] = 50.744639; 
    y[70] = 86.933508; y[71] = 304.053064;
    
    w_qsq.push_back(x);
    w_w.push_back(y);

    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 9.42177e5, 1.4432e5, ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  //1->2
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);
    x[0] = 1.00100; x[1] = 1.00350; x[2] = 1.00600; x[3] = 1.00850; x[4] = 1.01100; 
    x[5] = 1.01350; x[6] = 1.01600; x[7] = 1.01850; x[8] = 1.02100; x[9] = 1.02350; 
    x[10] = 1.02600; x[11] = 1.02850; x[12] = 1.03100; x[13] = 1.03350; x[14] = 1.03600; 
    x[15] = 1.03850; x[16] = 1.04100; x[17] = 1.04350; x[18] = 1.04600; x[19] = 1.04850; 
    x[20] = 1.05100; x[21] = 1.06100; x[22] = 1.07100; x[23] = 1.08100; x[24] = 1.09100; 
    x[25] = 1.10100; x[26] = 1.11000; x[27] = 1.14000; x[28] = 1.17000; x[29] = 1.20000; 
    x[30] = 1.23000; x[31] = 1.26000; x[32] = 1.29000; x[33] = 1.32000; x[34] = 1.35000; 
    x[35] = 1.38000; x[36] = 1.41000; x[37] = 1.44000; x[38] = 1.47000; x[39] = 1.50000; 
    x[40] = 1.53000; x[41] = 1.56000; x[42] = 1.59000; x[43] = 1.62000; x[44] = 1.65000; 
    x[45] = 1.68000; x[46] = 1.71000; x[47] = 1.74000; x[48] = 1.77000; x[49] = 1.80000; 
    x[50] = 1.83000; x[51] = 1.86000; x[52] = 1.89000; x[53] = 1.90900; x[54] = 1.91900; 
    x[55] = 1.92900; x[56] = 1.93900; x[57] = 1.94900; x[58] = 1.95900; x[59] = 1.96900; 
    x[60] = 1.97150; x[61] = 1.97400; x[62] = 1.97650; x[63] = 1.97900; x[64] = 1.98150; 
    x[65] = 1.98400; x[66] = 1.98650; x[67] = 1.98900; x[68] = 1.99150; x[69] = 1.99400; 
    x[70] = 1.99650; x[71] = 1.99900; 
    
    y[0] = -303.871850; y[1] = -86.752290; y[2] = -50.563414; y[3] = -35.660499; y[4] = -27.530388; 
    y[5] = -22.410411; y[6] = -18.889567; y[7] = -16.319558; y[8] = -14.360799; y[9] = -12.818209; 
    y[10] = -11.571738; y[11] = -10.543461; y[12] = -9.680587; y[13] = -8.946085; y[14] = -8.313211; 
    y[15] = -7.762166; y[16] = -7.277980; y[17] = -6.849127; y[18] = -6.466583; y[19] = -6.123187; 
    y[20] = -5.813181; y[21] = -4.824945; y[22] = -4.111880; y[23] = -3.572044; y[24] = -3.148304; 
    y[25] = -2.806151; y[26] = -2.549559; y[27] = -1.922394; y[28] = -1.503322; y[29] = -1.198131; 
    y[30] = -0.961652; y[31] = -0.769455; y[32] = -0.607103; y[33] = -0.465442; y[34] = -0.338320; 
    y[35] = -0.221366; y[36] = -0.111306; y[37] = -0.005543; y[38] = 0.098113; y[39] = 0.201637; 
    y[40] = 0.306948; y[41] = 0.416042; y[42] = 0.531143; y[43] = 0.654886; y[44] = 0.790563; 
    y[45] = 0.942490; y[46] = 1.116585; y[47] = 1.321326; y[48] = 1.569465; y[49] = 1.881256; 
    y[50] = 2.291106; y[51] = 2.862761; y[52] = 3.729349; y[53] = 4.563495; y[54] = 5.156197; 
    y[55] = 5.913133; y[56] = 6.915099; y[57] = 8.306260; y[58] = 10.371422; y[59] = 13.762882; 
    y[60] = 14.981591; y[61] = 16.434218; y[62] = 18.195418; y[63] = 20.375397; y[64] = 23.143930; 
    y[65] = 26.776903; y[66] = 31.754561; y[67] = 38.993736; y[68] = 50.489885; y[69] = 71.564228; 
    y[70] = 122.741467; y[71] = 429.793334; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 1.4432e5, 2.04099e5, ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  //2->3
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 2.00100; x[1] = 2.00350; x[2] = 2.00600; x[3] = 2.00850; x[4] = 2.01100; 
    x[5] = 2.01350; x[6] = 2.01600; x[7] = 2.01850; x[8] = 2.02100; x[9] = 2.02350; 
    x[10] = 2.02600; x[11] = 2.02850; x[12] = 2.03100; x[13] = 2.03350; x[14] = 2.03600; 
    x[15] = 2.03850; x[16] = 2.04100; x[17] = 2.04350; x[18] = 2.04600; x[19] = 2.04850; 
    x[20] = 2.05100; x[21] = 2.06100; x[22] = 2.07100; x[23] = 2.08100; x[24] = 2.09100; 
    x[25] = 2.10100; x[26] = 2.11000; x[27] = 2.14000; x[28] = 2.17000; x[29] = 2.20000; 
    x[30] = 2.23000; x[31] = 2.26000; x[32] = 2.29000; x[33] = 2.32000; x[34] = 2.35000; 
    x[35] = 2.38000; x[36] = 2.41000; x[37] = 2.44000; x[38] = 2.47000; x[39] = 2.50000; 
    x[40] = 2.53000; x[41] = 2.56000; x[42] = 2.59000; x[43] = 2.62000; x[44] = 2.65000; 
    x[45] = 2.68000; x[46] = 2.71000; x[47] = 2.74000; x[48] = 2.77000; x[49] = 2.80000; 
    x[50] = 2.83000; x[51] = 2.86000; x[52] = 2.89000; x[53] = 2.90900; x[54] = 2.91900; 
    x[55] = 2.92900; x[56] = 2.93900; x[57] = 2.94900; x[58] = 2.95900; x[59] = 2.96900; 
    x[60] = 2.97150; x[61] = 2.97400; x[62] = 2.97650; x[63] = 2.97900; x[64] = 2.98150; 
    x[65] = 2.98400; x[66] = 2.98650; x[67] = 2.98900; x[68] = 2.99150; x[69] = 2.99400; 
    x[70] = 2.99650; x[71] = 2.99900; 
    
    y[0] = -429.943570; y[1] = -122.891705; y[2] = -71.714469; y[3] = -50.640132; y[4] = -39.143990; 
    y[5] = -31.904825; y[6] = -26.927178; y[7] = -23.294219; y[8] = -20.525701; y[9] = -18.345740; 
    y[10] = -16.584559; y[11] = -15.131953; y[12] = -13.913267; y[13] = -12.876132; y[14] = -11.982723; 
    y[15] = -11.205042; y[16] = -10.521920; y[17] = -9.917053; y[18] = -9.377682; y[19] = -8.893679; 
    y[20] = -8.456901; y[21] = -7.065916; y[22] = -6.064156; y[23] = -5.307459; y[24] = -4.715028; 
    y[25] = -4.238065; y[26] = -3.881488; y[27] = -3.016102; y[28] = -2.445961; y[29] = -2.037954; 
    y[30] = -1.728356; y[31] = -1.482785; y[32] = -1.281019; y[33] = -1.110344; y[34] = -0.962327; 
    y[35] = -0.831107; y[36] = -0.712437; y[37] = -0.603108; y[38] = -0.500590; y[39] = -0.402786; 
    y[40] = -0.307863; y[41] = -0.214112; y[42] = -0.119823; y[43] = -0.023162; y[44] = 0.077996; 
    y[45] = 0.186270; y[46] = 0.305111; y[47] = 0.439326; y[48] = 0.596020; y[49] = 0.786359; 
    y[50] = 1.029191; y[51] = 1.359322; y[52] = 1.849311; y[53] = 2.314623; y[54] = 2.643085; 
    y[55] = 3.060886; y[56] = 3.612008; y[57] = 4.374927; y[58] = 5.504675; y[59] = 7.356318; 
    y[60] = 8.021083; y[61] = 8.813174; y[62] = 9.773229; y[63] = 10.961234; y[64] = 12.469605; 
    y[65] = 14.448515; y[66] = 17.159376; y[67] = 21.101249; y[68] = 27.360322; y[69] = 38.833100; 
    y[70] = 66.691817; y[71] = 233.831037; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 2.04099e5, 1.11098e5, ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 3->4
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 3.00100; x[1] = 3.00350; x[2] = 3.00600; x[3] = 3.00850; x[4] = 3.01100; 
    x[5] = 3.01350; x[6] = 3.01600; x[7] = 3.01850; x[8] = 3.02100; x[9] = 3.02350; 
    x[10] = 3.02600; x[11] = 3.02850; x[12] = 3.03100; x[13] = 3.03350; x[14] = 3.03600; 
    x[15] = 3.03850; x[16] = 3.04100; x[17] = 3.04350; x[18] = 3.04600; x[19] = 3.04850; 
    x[20] = 3.05100; x[21] = 3.06100; x[22] = 3.07100; x[23] = 3.08100; x[24] = 3.09100; 
    x[25] = 3.10100; x[26] = 3.11000; x[27] = 3.14000; x[28] = 3.17000; x[29] = 3.20000; 
    x[30] = 3.23000; x[31] = 3.26000; x[32] = 3.29000; x[33] = 3.32000; x[34] = 3.35000; 
    x[35] = 3.38000; x[36] = 3.41000; x[37] = 3.44000; x[38] = 3.47000; x[39] = 3.50000; 
    x[40] = 3.53000; x[41] = 3.56000; x[42] = 3.59000; x[43] = 3.62000; x[44] = 3.65000; 
    x[45] = 3.68000; x[46] = 3.71000; x[47] = 3.74000; x[48] = 3.77000; x[49] = 3.80000; 
    x[50] = 3.83000; x[51] = 3.86000; x[52] = 3.89000; x[53] = 3.90900; x[54] = 3.91900; 
    x[55] = 3.92900; x[56] = 3.93900; x[57] = 3.94900; x[58] = 3.95900; x[59] = 3.96900; 
    x[60] = 3.97150; x[61] = 3.97400; x[62] = 3.97650; x[63] = 3.97900; x[64] = 3.98150; 
    x[65] = 3.98400; x[66] = 3.98650; x[67] = 3.98900; x[68] = 3.99150; x[69] = 3.99400; 
    x[70] = 3.99650; x[71] = 3.99900; 
    
    y[0] = -234.149376; y[1] = -67.010161; y[2] = -39.151456; y[3] = -27.678695; y[4] = -21.419646; 
    y[5] = -17.477804; y[6] = -14.766979; y[7] = -12.788111; y[8] = -11.279788; y[9] = -10.091837; 
    y[10] = -9.131844; y[11] = -8.339820; y[12] = -7.675128; y[13] = -7.109261; y[14] = -6.621631; 
    y[15] = -6.196998; y[16] = -5.823838; y[17] = -5.493277; y[18] = -5.198370; y[19] = -4.933603; 
    y[20] = -4.694544; y[21] = -3.932178; y[22] = -3.381709; y[23] = -2.964662; y[24] = -2.637057; 
    y[25] = -2.372329; y[26] = -2.173660; y[27] = -1.687480; y[28] = -1.362160; y[29] = -1.125205; 
    y[30] = -0.941886; y[31] = -0.793451; y[32] = -0.668850; y[33] = -0.561124; y[34] = -0.465638; 
    y[35] = -0.379157; y[36] = -0.299320; y[37] = -0.224326; y[38] = -0.152738; y[39] = -0.083343; 
    y[40] = -0.015063; y[41] = 0.053131; y[42] = 0.122289; y[43] = 0.193561; y[44] = 0.268297; 
    y[45] = 0.348180; y[46] = 0.435442; y[47] = 0.533205; y[48] = 0.646089; y[49] = 0.781360; 
    y[50] = 0.951279; y[51] = 1.178478; y[52] = 1.510114; y[53] = 1.821147; y[54] = 2.039231; 
    y[55] = 2.315418; y[56] = 2.678277; y[57] = 3.178783; y[58] = 3.917632; y[59] = 5.125451; 
    y[60] = 5.558527; y[61] = 6.074309; y[62] = 6.699192; y[63] = 7.472139; y[64] = 8.453175; 
    y[65] = 9.739841; y[66] = 11.501928; y[67] = 14.063587; y[68] = 18.130317; y[69] = 25.583453; 
    y[70] = 43.679575; y[71] = 152.241043;
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 1.11098e5, 7.2161e4, ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 4->5
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 4.00100; x[1] = 4.00350; x[2] = 4.00600; x[3] = 4.00850; x[4] = 4.01100; 
    x[5] = 4.01350; x[6] = 4.01600; x[7] = 4.01850; x[8] = 4.02100; x[9] = 4.02350; 
    x[10] = 4.02600; x[11] = 4.02850; x[12] = 4.03100; x[13] = 4.03350; x[14] = 4.03600; 
    x[15] = 4.03850; x[16] = 4.04100; x[17] = 4.04350; x[18] = 4.04600; x[19] = 4.04850; 
    x[20] = 4.05100; x[21] = 4.06100; x[22] = 4.07100; x[23] = 4.08100; x[24] = 4.09100; 
    x[25] = 4.10100; x[26] = 4.11000; x[27] = 4.14000; x[28] = 4.17000; x[29] = 4.20000; 
    x[30] = 4.23000; x[31] = 4.26000; x[32] = 4.29000; x[33] = 4.32000; x[34] = 4.35000; 
    x[35] = 4.38000; x[36] = 4.41000; x[37] = 4.44000; x[38] = 4.47000; x[39] = 4.50000; 
    x[40] = 4.53000; x[41] = 4.56000; x[42] = 4.59000; x[43] = 4.62000; x[44] = 4.65000; 
    x[45] = 4.68000; x[46] = 4.71000; x[47] = 4.74000; x[48] = 4.77000; x[49] = 4.80000; 
    x[50] = 4.83000; x[51] = 4.86000; x[52] = 4.89000; x[53] = 4.90900; x[54] = 4.91900; 
    x[55] = 4.92900; x[56] = 4.93900; x[57] = 4.94900; x[58] = 4.95900; x[59] = 4.96900; 
    x[60] = 4.97150; x[61] = 4.97400; x[62] = 4.97650; x[63] = 4.97900; x[64] = 4.98150; 
    x[65] = 4.98400; x[66] = 4.98650; x[67] = 4.98900; x[68] = 4.99150; x[69] = 4.99400; 
    x[70] = 4.99650; x[71] = 4.99900; 
    
    y[0] = -151.720060; y[1] = -43.158585; y[2] = -25.062448; y[3] = -17.609289; y[4] = -13.542530; 
    y[5] = -10.980834; y[6] = -9.218701; y[7] = -7.931982; y[8] = -6.950885; y[9] = -6.177870; 
    y[10] = -5.552911; y[11] = -5.037045; y[12] = -4.603877; y[13] = -4.234892; y[14] = -3.916717; 
    y[15] = -3.639453; y[16] = -3.395615; y[17] = -3.179440; y[18] = -2.986415; y[19] = -2.812961; 
    y[20] = -2.656198; y[21] = -2.155000; y[22] = -1.791321; y[23] = -1.514189; y[24] = -1.295033; 
    y[25] = -1.116594; y[26] = -0.981604; y[27] = -0.645207; y[28] = -0.412003; y[29] = -0.234762; 
    y[30] = -0.090764; y[31] = 0.032363; y[32] = 0.142017; y[33] = 0.242984; y[34] = 0.338584; 
    y[35] = 0.431290; y[36] = 0.523085; y[37] = 0.615682; y[38] = 0.710680; y[39] = 0.809694; 
    y[40] = 0.914461; y[41] = 1.026967; y[42] = 1.149601; y[43] = 1.285350; y[44] = 1.438100; 
    y[45] = 1.613084; y[46] = 1.817597; y[47] = 2.062212; y[48] = 2.362927; y[49] = 2.745256; 
    y[50] = 3.252632; y[51] = 3.965616; y[52] = 5.052541; y[53] = 6.102248; y[54] = 6.849244; 
    y[55] = 7.804069; y[56] = 9.068923; y[57] = 10.826160; y[58] = 13.436033; y[59] = 17.723639; 
    y[60] = 19.264638; y[61] = 21.101528; y[62] = 23.328740; y[63] = 26.085676; y[64] = 29.587085; 
    y[65] = 34.181940; y[66] = 40.477706; y[67] = 49.634096; y[68] = 64.175185; y[69] = 90.831841; 
    y[70] = 155.565989; y[71] = 543.958791; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 7.2161e4, 2.58166e5, ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 5->6
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 5.00100; x[1] = 5.00350; x[2] = 5.00600; x[3] = 5.00850; x[4] = 5.01100; 
    x[5] = 5.01350; x[6] = 5.01600; x[7] = 5.01850; x[8] = 5.02100; x[9] = 5.02350; 
    x[10] = 5.02600; x[11] = 5.02850; x[12] = 5.03100; x[13] = 5.03350; x[14] = 5.03600; 
    x[15] = 5.03850; x[16] = 5.04100; x[17] = 5.04350; x[18] = 5.04600; x[19] = 5.04850; 
    x[20] = 5.05100; x[21] = 5.06100; x[22] = 5.07100; x[23] = 5.08100; x[24] = 5.09100; 
    x[25] = 5.10100; x[26] = 5.11000; x[27] = 5.14000; x[28] = 5.17000; x[29] = 5.20000; 
    x[30] = 5.23000; x[31] = 5.26000; x[32] = 5.29000; x[33] = 5.32000; x[34] = 5.35000; 
    x[35] = 5.38000; x[36] = 5.41000; x[37] = 5.44000; x[38] = 5.47000; x[39] = 5.50000; 
    x[40] = 5.53000; x[41] = 5.56000; x[42] = 5.59000; x[43] = 5.62000; x[44] = 5.65000; 
    x[45] = 5.68000; x[46] = 5.71000; x[47] = 5.74000; x[48] = 5.77000; x[49] = 5.80000; 
    x[50] = 5.83000; x[51] = 5.86000; x[52] = 5.89000; x[53] = 5.90900; x[54] = 5.91900; 
    x[55] = 5.92900; x[56] = 5.93900; x[57] = 5.94900; x[58] = 5.95900; x[59] = 5.96900; 
    x[60] = 5.97150; x[61] = 5.97400; x[62] = 5.97650; x[63] = 5.97900; x[64] = 5.98150; 
    x[65] = 5.98400; x[66] = 5.98650; x[67] = 5.98900; x[68] = 5.99150; x[69] = 5.99400; 
    x[70] = 5.99650; x[71] = 5.99900; 
    
    y[0] = -543.532329; y[1] = -155.139521; y[2] = -90.405358; y[3] = -63.748679; y[4] = -49.207560; 
    y[5] = -40.051132; y[6] = -33.755319; y[7] = -29.160411; y[8] = -25.658940; y[9] = -22.901936; 
    y[10] = -20.674646; y[11] = -18.837671; y[12] = -17.296580; y[13] = -15.985127; y[14] = -14.855472; 
    y[15] = -13.872197; y[16] = -13.008525; y[17] = -12.243834; y[18] = -11.561984; y[19] = -10.950165; 
    y[20] = -10.398077; y[21] = -8.640140; y[22] = -7.374457; y[23] = -6.418675; y[24] = -5.670592; 
    y[25] = -5.068482; y[26] = -4.618458; y[27] = -3.526707; y[28] = -2.807626; y[29] = -2.292807; 
    y[30] = -1.901591; y[31] = -1.590426; y[32] = -1.333652; y[33] = -1.115092; y[34] = -0.923956; 
    y[35] = -0.752682; y[36] = -0.595715; y[37] = -0.448769; y[38] = -0.308360; y[39] = -0.171484; 
    y[40] = -0.035371; y[41] = 0.102716; y[42] = 0.245689; y[43] = 0.396863; y[44] = 0.560256; 
    y[45] = 0.741029; y[46] = 0.946157; y[47] = 1.185548; y[48] = 1.474018; y[49] = 1.835029; 
    y[50] = 2.308371; y[51] = 2.967699; y[52] = 3.966768; y[53] = 4.928544; y[54] = 5.612068; 
    y[55] = 6.485145; y[56] = 7.641074; y[57] = 9.246319; y[58] = 11.629748; y[59] = 15.544567; 
    y[60] = 16.951472; y[61] = 18.628477; y[62] = 20.661786; y[63] = 23.178653; y[64] = 26.375120; 
    y[65] = 30.569750; y[66] = 36.317083; y[67] = 44.675786; y[68] = 57.950013; y[69] = 82.284181; 
    y[70] = 141.378173; y[71] = 495.930731; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 2.58166e5, 2.35673e5, ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
};

LuescherW40::LuescherW40(){

  // 0->1
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 0.00100; x[1] = 0.00350; x[2] = 0.00600; x[3] = 0.00850; x[4] = 0.01100; 
    x[5] = 0.01350; x[6] = 0.01600; x[7] = 0.01850; x[8] = 0.02100; x[9] = 0.02350; 
    x[10] = 0.02600; x[11] = 0.02850; x[12] = 0.03100; x[13] = 0.03350; x[14] = 0.03600; 
    x[15] = 0.03850; x[16] = 0.04100; x[17] = 0.04350; x[18] = 0.04600; x[19] = 0.04850; 
    x[20] = 0.05100; x[21] = 0.06100; x[22] = 0.07100; x[23] = 0.08100; x[24] = 0.09100; 
    x[25] = 0.10100; x[26] = 0.11000; x[27] = 0.14000; x[28] = 0.17000; x[29] = 0.20000; 
    x[30] = 0.23000; x[31] = 0.26000; x[32] = 0.29000; x[33] = 0.32000; x[34] = 0.35000; 
    x[35] = 0.38000; x[36] = 0.41000; x[37] = 0.44000; x[38] = 0.47000; x[39] = 0.50000; 
    x[40] = 0.53000; x[41] = 0.56000; x[42] = 0.59000; x[43] = 0.62000; x[44] = 0.65000; 
    x[45] = 0.68000; x[46] = 0.71000; x[47] = 0.74000; x[48] = 0.77000; x[49] = 0.80000; 
    x[50] = 0.83000; x[51] = 0.86000; x[52] = 0.89000; x[53] = 0.90900; x[54] = 0.91900; 
    x[55] = 0.92900; x[56] = 0.93900; x[57] = 0.94900; x[58] = 0.95900; x[59] = 0.96900; 
    x[60] = 0.97150; x[61] = 0.97400; x[62] = 0.97650; x[63] = 0.97900; x[64] = 0.98150; 
    x[65] = 0.98400; x[66] = 0.98650; x[67] = 0.98900; x[68] = 0.99150; x[69] = 0.99400; 
    x[70] = 0.99650; x[71] = 0.99900; 
    
    y[0] = 1056516.112508; y[1] = 46386.576042; y[2] = 12130.372137; y[3] = 5109.734012; y[4] = 2698.738485; 
    y[5] = 1627.453419; y[6] = 1070.895481; y[7] = 749.592741; y[8] = 549.436770; y[9] = 417.360355; 
    y[10] = 326.186525; y[11] = 260.921239; y[12] = 212.786084; y[13] = 176.386363; y[14] = 148.270260; 
    y[15] = 126.152389; y[16] = 108.474688; y[17] = 94.147635; y[18] = 82.392231; y[19] = 72.640457; 
    y[20] = 64.470845; y[21] = 42.269415; y[22] = 29.670807; y[23] = 21.900330; y[24] = 16.800123; 
    y[25] = 13.287132; y[26] = 10.989991; y[27] = 6.511980; y[28] = 4.346299; y[29] = 3.144651; 
    y[30] = 2.412552; y[31] = 1.935562; y[32] = 1.608952; y[33] = 1.376829; y[34] = 1.207243; 
    y[35] = 1.080918; y[36] = 0.985718; y[37] = 0.913746; y[38] = 0.859746; y[39] = 0.820184; 
    y[40] = 0.792702; y[41] = 0.775795; y[42] = 0.768626; y[43] = 0.770937; y[44] = 0.783040; 
    y[45] = 0.805888; y[46] = 0.841259; y[47] = 0.892117; y[48] = 0.963282; y[49] = 1.062746; 
    y[50] = 1.204395; y[51] = 1.414267; y[52] = 1.747054; y[53] = 2.076066; y[54] = 2.312777; 
    y[55] = 2.617332; y[56] = 3.023051; y[57] = 3.589395; y[58] = 4.433834; y[59] = 5.825422; 
    y[60] = 6.326297; y[61] = 6.923662; y[62] = 7.648311; y[63] = 8.545702; y[64] = 9.685864; 
    y[65] = 11.182594; y[66] = 13.233981; y[67] = 16.218202; y[68] = 20.958338; y[69] = 29.649282; 
    y[70] = 50.757041; y[71] = 177.407703; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, -7.257e8, 8.4186e4, ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 1->2
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 1.00100; x[1] = 1.00350; x[2] = 1.00600; x[3] = 1.00850; x[4] = 1.01100; 
    x[5] = 1.01350; x[6] = 1.01600; x[7] = 1.01850; x[8] = 1.02100; x[9] = 1.02350; 
    x[10] = 1.02600; x[11] = 1.02850; x[12] = 1.03100; x[13] = 1.03350; x[14] = 1.03600; 
    x[15] = 1.03850; x[16] = 1.04100; x[17] = 1.04350; x[18] = 1.04600; x[19] = 1.04850; 
    x[20] = 1.05100; x[21] = 1.06100; x[22] = 1.07100; x[23] = 1.08100; x[24] = 1.09100; 
    x[25] = 1.10100; x[26] = 1.11000; x[27] = 1.14000; x[28] = 1.17000; x[29] = 1.20000; 
    x[30] = 1.23000; x[31] = 1.26000; x[32] = 1.29000; x[33] = 1.32000; x[34] = 1.35000; 
    x[35] = 1.38000; x[36] = 1.41000; x[37] = 1.44000; x[38] = 1.47000; x[39] = 1.50000; 
    x[40] = 1.53000; x[41] = 1.56000; x[42] = 1.59000; x[43] = 1.62000; x[44] = 1.65000; 
    x[45] = 1.68000; x[46] = 1.71000; x[47] = 1.74000; x[48] = 1.77000; x[49] = 1.80000; 
    x[50] = 1.83000; x[51] = 1.86000; x[52] = 1.89000; x[53] = 1.90900; x[54] = 1.91900; 
    x[55] = 1.92900; x[56] = 1.93900; x[57] = 1.94900; x[58] = 1.95900; x[59] = 1.96900; 
    x[60] = 1.97150; x[61] = 1.97400; x[62] = 1.97650; x[63] = 1.97900; x[64] = 1.98150; 
    x[65] = 1.98400; x[66] = 1.98650; x[67] = 1.98900; x[68] = 1.99150; x[69] = 1.99400; 
    x[70] = 1.99650; x[71] = 1.99900; 
    
    y[0] = -177.217092; y[1] = -50.566424; y[2] = -29.458652; y[3] = -20.767689; y[4] = -16.027527; 
    y[5] = -13.043274; y[6] = -10.991846; y[7] = -9.495071; y[8] = -8.354856; y[9] = -7.457405; 
    y[10] = -6.732690; y[11] = -6.135252; y[12] = -5.634298; y[13] = -5.208227; y[14] = -4.841437; 
    y[15] = -4.522380; y[16] = -4.242323; y[17] = -3.994543; y[18] = -3.773775; y[19] = -3.575843; 
    y[20] = -3.397388; y[21] = -2.830440; y[22] = -2.424004; y[23] = -2.118620; y[24] = -1.880966; 
    y[25] = -1.690917; y[26] = -1.549839; y[27] = -1.212814; y[28] = -0.997526; y[29] = -0.849171; 
    y[30] = -0.741566; y[31] = -0.660639; y[32] = -0.598163; y[33] = -0.549024; y[34] = -0.509882; 
    y[35] = -0.478483; y[36] = -0.453260; y[37] = -0.433108; y[38] = -0.417242; y[39] = -0.405116; 
    y[40] = -0.396363; y[41] = -0.390769; y[42] = -0.388256; y[43] = -0.388885; y[44] = -0.392876; 
    y[45] = -0.400642; y[46] = -0.412869; y[47] = -0.430646; y[48] = -0.455707; y[49] = -0.490904; 
    y[50] = -0.541164; y[51] = -0.615710; y[52] = -0.733892; y[53] = -0.850647; y[54] = -0.934596; 
    y[55] = -1.042554; y[56] = -1.186303; y[57] = -1.386865; y[58] = -1.685773; y[59] = -2.178152; 
    y[60] = -2.355336; y[61] = -2.566637; y[62] = -2.822941; y[63] = -3.140320; y[64] = -3.543533; 
    y[65] = -4.072813; y[66] = -4.798197; y[67] = -5.853388; y[68] = -7.529390; y[69] = -10.602216; 
    y[70] = -18.065051; y[71] = -62.842938; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 8.4186e4, -2.9764e4, ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 1->2
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 2.00100; x[1] = 2.00350; x[2] = 2.00600; x[3] = 2.00850; x[4] = 2.01100; 
    x[5] = 2.01350; x[6] = 2.01600; x[7] = 2.01850; x[8] = 2.02100; x[9] = 2.02350; 
    x[10] = 2.02600; x[11] = 2.02850; x[12] = 2.03100; x[13] = 2.03350; x[14] = 2.03600; 
    x[15] = 2.03850; x[16] = 2.04100; x[17] = 2.04350; x[18] = 2.04600; x[19] = 2.04850; 
    x[20] = 2.05100; x[21] = 2.06100; x[22] = 2.07100; x[23] = 2.08100; x[24] = 2.09100; 
    x[25] = 2.10100; x[26] = 2.11000; x[27] = 2.14000; x[28] = 2.17000; x[29] = 2.20000; 
    x[30] = 2.23000; x[31] = 2.26000; x[32] = 2.29000; x[33] = 2.32000; x[34] = 2.35000; 
    x[35] = 2.38000; x[36] = 2.41000; x[37] = 2.44000; x[38] = 2.47000; x[39] = 2.50000; 
    x[40] = 2.53000; x[41] = 2.56000; x[42] = 2.59000; x[43] = 2.62000; x[44] = 2.65000; 
    x[45] = 2.68000; x[46] = 2.71000; x[47] = 2.74000; x[48] = 2.77000; x[49] = 2.80000; 
    x[50] = 2.83000; x[51] = 2.86000; x[52] = 2.89000; x[53] = 2.90900; x[54] = 2.91900; 
    x[55] = 2.92900; x[56] = 2.93900; x[57] = 2.94900; x[58] = 2.95900; x[59] = 2.96900; 
    x[60] = 2.97150; x[61] = 2.97400; x[62] = 2.97650; x[63] = 2.97900; x[64] = 2.98150; 
    x[65] = 2.98400; x[66] = 2.98650; x[67] = 2.98900; x[68] = 2.99150; x[69] = 2.99400; 
    x[70] = 2.99650; x[71] = 2.99900; 
    
    y[0] = 62.535766; y[1] = 17.757873; y[2] = 10.295028; y[3] = 7.222185; y[4] = 5.546160; 
    y[5] = 4.490941; y[6] = 3.765523; y[7] = 3.236203; y[8] = 2.832945; y[9] = 2.515514; 
    y[10] = 2.259153; y[11] = 2.047790; y[12] = 1.870537; y[13] = 1.719757; y[14] = 1.589935; 
    y[15] = 1.476987; y[16] = 1.377826; y[17] = 1.290074; y[18] = 1.211871; y[19] = 1.141739; 
    y[20] = 1.078492; y[21] = 0.877411; y[22] = 0.733049; y[23] = 0.624382; y[24] = 0.539628; 
    y[25] = 0.471671; y[26] = 0.421075; y[27] = 0.299316; y[28] = 0.220249; y[29] = 0.164466; 
    y[30] = 0.122670; y[31] = 0.089842; y[32] = 0.063020; y[33] = 0.040330; y[34] = 0.020519; 
    y[35] = 0.002697; y[36] = -0.013800; y[37] = -0.029497; y[38] = -0.044836; y[39] = -0.060218; 
    y[40] = -0.076031; y[41] = -0.092681; y[42] = -0.110626; y[43] = -0.130408; y[44] = -0.152711; 
    y[45] = -0.178434; y[46] = -0.208817; y[47] = -0.245640; y[48] = -0.291588; y[49] = -0.350935; 
    y[50] = -0.430947; y[51] = -0.545105; y[52] = -0.721570; y[53] = -0.893655; y[54] = -1.016732; 
    y[55] = -1.174557; y[56] = -1.384232; y[57] = -1.676274; y[58] = -2.110972; y[59] = -2.826405; 
    y[60] = -3.083761; y[61] = -3.390633; y[62] = -3.762824; y[63] = -4.223662; y[64] = -4.809087; 
    y[65] = -5.577498; y[66] = -6.630557; y[67] = -8.162341; y[68] = -10.595259; y[69] = -15.055729; 
    y[70] = -25.888507; y[71] = -90.885926; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, -2.9764e4, -4.3204e4  , ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 3->4
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 3.00100; x[1] = 3.00350; x[2] = 3.00600; x[3] = 3.00850; x[4] = 3.01100; 
    x[5] = 3.01350; x[6] = 3.01600; x[7] = 3.01850; x[8] = 3.02100; x[9] = 3.02350; 
    x[10] = 3.02600; x[11] = 3.02850; x[12] = 3.03100; x[13] = 3.03350; x[14] = 3.03600; 
    x[15] = 3.03850; x[16] = 3.04100; x[17] = 3.04350; x[18] = 3.04600; x[19] = 3.04850; 
    x[20] = 3.05100; x[21] = 3.06100; x[22] = 3.07100; x[23] = 3.08100; x[24] = 3.09100; 
    x[25] = 3.10100; x[26] = 3.11000; x[27] = 3.14000; x[28] = 3.17000; x[29] = 3.20000; 
    x[30] = 3.23000; x[31] = 3.26000; x[32] = 3.29000; x[33] = 3.32000; x[34] = 3.35000; 
    x[35] = 3.38000; x[36] = 3.41000; x[37] = 3.44000; x[38] = 3.47000; x[39] = 3.50000; 
    x[40] = 3.53000; x[41] = 3.56000; x[42] = 3.59000; x[43] = 3.62000; x[44] = 3.65000; 
    x[45] = 3.68000; x[46] = 3.71000; x[47] = 3.74000; x[48] = 3.77000; x[49] = 3.80000; 
    x[50] = 3.83000; x[51] = 3.86000; x[52] = 3.89000; x[53] = 3.90900; x[54] = 3.91900; 
    x[55] = 3.92900; x[56] = 3.93900; x[57] = 3.94900; x[58] = 3.95900; x[59] = 3.96900; 
    x[60] = 3.97150; x[61] = 3.97400; x[62] = 3.97650; x[63] = 3.97900; x[64] = 3.98150; 
    x[65] = 3.98400; x[66] = 3.98650; x[67] = 3.98900; x[68] = 3.99150; x[69] = 3.99400; 
    x[70] = 3.99650; x[71] = 3.99900; 
    
    y[0] = 91.107392; y[1] = 26.109977; y[2] = 15.277205; y[3] = 10.816745; y[4] = 8.383841; 
    y[5] = 6.852074; y[6] = 5.799036; y[7] = 5.030649; y[8] = 4.445252; y[9] = 3.984445; 
    y[10] = 3.612289; y[11] = 3.305456; y[12] = 3.048141; y[13] = 2.829259; y[14] = 2.640804; 
    y[15] = 2.476849; y[16] = 2.332911; y[17] = 2.205541; y[18] = 2.092038; y[19] = 1.990256; 
    y[20] = 1.898474; y[21] = 1.606748; y[22] = 1.397447; y[23] = 1.240055; y[24] = 1.117469; 
    y[25] = 1.019361; y[26] = 0.946482; y[27] = 0.772197; y[28] = 0.660793; y[29] = 0.584140; 
    y[30] = 0.528803; y[31] = 0.487565; y[32] = 0.456219; y[33] = 0.432159; y[34] = 0.413698; 
    y[35] = 0.399716; y[36] = 0.389454; y[37] = 0.382407; y[38] = 0.378247; y[39] = 0.376791; 
    y[40] = 0.377976; y[41] = 0.381854; y[42] = 0.388595; y[43] = 0.398510; y[44] = 0.412088; 
    y[45] = 0.430064; y[46] = 0.453526; y[47] = 0.484115; y[48] = 0.524367; y[49] = 0.578381; 
    y[50] = 0.653185; y[51] = 0.761869; y[52] = 0.931838; y[53] = 1.098543; y[54] = 1.218041; 
    y[55] = 1.371452; y[56] = 1.575439; y[57] = 1.859732; y[58] = 2.283069; y[59] = 2.979978; 
    y[60] = 3.230694; y[61] = 3.529655; y[62] = 3.892258; y[63] = 4.341232; y[64] = 4.911592; 
    y[65] = 5.660235; y[66] = 6.686208; y[67] = 8.178596; y[68] = 10.548943; y[69] = 14.894694; 
    y[70] = 25.448853; y[71] = 88.774463;
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, -4.3204e4, 4.2093e4 , ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  } 
  // 4->5
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);
    
    x[0] = 4.00100; x[1] = 4.00350; x[2] = 4.00600; x[3] = 4.00850; x[4] = 4.01100; 
    x[5] = 4.01350; x[6] = 4.01600; x[7] = 4.01850; x[8] = 4.02100; x[9] = 4.02350; 
    x[10] = 4.02600; x[11] = 4.02850; x[12] = 4.03100; x[13] = 4.03350; x[14] = 4.03600; 
    x[15] = 4.03850; x[16] = 4.04100; x[17] = 4.04350; x[18] = 4.04600; x[19] = 4.04850; 
    x[20] = 4.05100; x[21] = 4.06100; x[22] = 4.07100; x[23] = 4.08100; x[24] = 4.09100; 
    x[25] = 4.10100; x[26] = 4.11000; x[27] = 4.14000; x[28] = 4.17000; x[29] = 4.20000; 
    x[30] = 4.23000; x[31] = 4.26000; x[32] = 4.29000; x[33] = 4.32000; x[34] = 4.35000; 
    x[35] = 4.38000; x[36] = 4.41000; x[37] = 4.44000; x[38] = 4.47000; x[39] = 4.50000; 
    x[40] = 4.53000; x[41] = 4.56000; x[42] = 4.59000; x[43] = 4.62000; x[44] = 4.65000; 
    x[45] = 4.68000; x[46] = 4.71000; x[47] = 4.74000; x[48] = 4.77000; x[49] = 4.80000; 
    x[50] = 4.83000; x[51] = 4.86000; x[52] = 4.89000; x[53] = 4.90900; x[54] = 4.91900; 
    x[55] = 4.92900; x[56] = 4.93900; x[57] = 4.94900; x[58] = 4.95900; x[59] = 4.96900; 
    x[60] = 4.97150; x[61] = 4.97400; x[62] = 4.97650; x[63] = 4.97900; x[64] = 4.98150; 
    x[65] = 4.98400; x[66] = 4.98650; x[67] = 4.98900; x[68] = 4.99150; x[69] = 4.99400; 
    x[70] = 4.99650; x[71] = 4.99900; 
    
    y[0] = -88.537711; y[1] = -25.212098; y[2] = -14.657932; y[3] = -10.312170; y[4] = -7.941809; 
    y[5] = -6.449402; y[6] = -5.423408; y[7] = -4.674739; y[8] = -4.104350; y[9] = -3.655343; 
    y[10] = -3.292703; y[11] = -2.993701; y[12] = -2.742941; y[13] = -2.529622; y[14] = -2.345943; 
    y[15] = -2.186130; y[16] = -2.045817; y[17] = -1.921641; y[18] = -1.810972; y[19] = -1.711720; 
    y[20] = -1.622205; y[21] = -1.337577; y[22] = -1.133194; y[23] = -0.979325; y[24] = -0.859309; 
    y[25] = -0.763080; y[26] = -0.691443; y[27] = -0.519170; y[28] = -0.407577; y[29] = -0.329225; 
    y[30] = -0.270980; y[31] = -0.225760; y[32] = -0.189399; y[33] = -0.159279; y[34] = -0.133662; 
    y[35] = -0.111337; y[36] = -0.091425; y[37] = -0.073255; y[38] = -0.056293; y[39] = -0.040088; 
    y[40] = -0.024236; y[41] = -0.008348; y[42] = 0.007975; y[43] = 0.025181; y[44] = 0.043799; 
    y[45] = 0.064503; y[46] = 0.088192; y[47] = 0.116139; y[48] = 0.150243; y[49] = 0.193504; 
    y[50] = 0.251007; y[51] = 0.332165; y[52] = 0.456625; y[53] = 0.577439; y[54] = 0.663667; 
    y[55] = 0.774107; y[56] = 0.920682; y[57] = 1.124665; y[58] = 1.428087; y[59] = 1.927208; 
    y[60] = 2.106711; y[61] = 2.320732; y[62] = 2.580289; y[63] = 2.901644; y[64] = 3.309852; 
    y[65] = 3.845627; y[66] = 4.579839; y[67] = 5.647788; y[68] = 7.343949; y[69] = 10.453592; 
    y[70] = 18.005606; y[71] = 63.317793; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 4.2093e4, 3.0119e4 , ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 5->6
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 5.00100; x[1] = 5.00350; x[2] = 5.00600; x[3] = 5.00850; x[4] = 5.01100; 
    x[5] = 5.01350; x[6] = 5.01600; x[7] = 5.01850; x[8] = 5.02100; x[9] = 5.02350; 
    x[10] = 5.02600; x[11] = 5.02850; x[12] = 5.03100; x[13] = 5.03350; x[14] = 5.03600; 
    x[15] = 5.03850; x[16] = 5.04100; x[17] = 5.04350; x[18] = 5.04600; x[19] = 5.04850; 
    x[20] = 5.05100; x[21] = 5.06100; x[22] = 5.07100; x[23] = 5.08100; x[24] = 5.09100; 
    x[25] = 5.10100; x[26] = 5.11000; x[27] = 5.14000; x[28] = 5.17000; x[29] = 5.20000; 
    x[30] = 5.23000; x[31] = 5.26000; x[32] = 5.29000; x[33] = 5.32000; x[34] = 5.35000; 
    x[35] = 5.38000; x[36] = 5.41000; x[37] = 5.44000; x[38] = 5.47000; x[39] = 5.50000; 
    x[40] = 5.53000; x[41] = 5.56000; x[42] = 5.59000; x[43] = 5.62000; x[44] = 5.65000; 
    x[45] = 5.68000; x[46] = 5.71000; x[47] = 5.74000; x[48] = 5.77000; x[49] = 5.80000; 
    x[50] = 5.83000; x[51] = 5.86000; x[52] = 5.89000; x[53] = 5.90900; x[54] = 5.91900; 
    x[55] = 5.92900; x[56] = 5.93900; x[57] = 5.94900; x[58] = 5.95900; x[59] = 5.96900; 
    x[60] = 5.97150; x[61] = 5.97400; x[62] = 5.97650; x[63] = 5.97900; x[64] = 5.98150; 
    x[65] = 5.98400; x[66] = 5.98650; x[67] = 5.98900; x[68] = 5.99150; x[69] = 5.99400; 
    x[70] = 5.99650; x[71] = 5.99900; 
    
    y[0] = -63.556417; y[1] = -18.244232; y[2] = -10.692225; y[3] = -7.582594; y[4] = -5.886447; 
    y[5] = -4.818516; y[6] = -4.084327; y[7] = -3.548578; y[8] = -3.140399; y[9] = -2.819078; 
    y[10] = -2.559558; y[11] = -2.345578; y[12] = -2.166120; y[13] = -2.013456; y[14] = -1.882003; 
    y[15] = -1.767631; y[16] = -1.667215; y[17] = -1.578349; y[18] = -1.499151; y[19] = -1.428125; 
    y[20] = -1.364071; y[21] = -1.160425; y[22] = -1.014251; y[23] = -0.904273; y[24] = -0.818568; 
    y[25] = -0.749937; y[26] = -0.698926; y[27] = -0.576793; y[28] = -0.498574; y[29] = -0.444656; 
    y[30] = -0.405674; y[31] = -0.376598; y[32] = -0.354495; y[33] = -0.337553; y[34] = -0.324599; 
    y[35] = -0.314858; y[36] = -0.307810; y[37] = -0.303112; y[38] = -0.300549; y[39] = -0.300010; 
    y[40] = -0.301474; y[41] = -0.305005; y[42] = -0.310761; y[43] = -0.319008; y[44] = -0.330157; 
    y[45] = -0.344814; y[46] = -0.363877; y[47] = -0.388686; y[48] = -0.421319; y[49] = -0.465122; 
    y[50] = -0.525835; y[51] = -0.614145; y[52] = -0.752428; y[53] = -0.888193; y[54] = -0.985568; 
    y[55] = -1.110624; y[56] = -1.276968; y[57] = -1.508873; y[58] = -1.854299; y[59] = -2.423087; 
    y[60] = -2.627736; y[61] = -2.871775; y[62] = -3.167778; y[63] = -3.534302; y[64] = -3.999936; 
    y[65] = -4.611138; y[66] = -5.448777; y[67] = -6.667243; y[68] = -8.602559; y[69] = -12.150784; 
    y[70] = -20.768152; y[71] = -72.473230; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 3.0119e4 , -3.4369e4, ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  } 

};

LuescherW60::LuescherW60(){

  // 0->1
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 0.00100; x[1] = 0.00350; x[2] = 0.00600; x[3] = 0.00850; x[4] = 0.01100; 
    x[5] = 0.01350; x[6] = 0.01600; x[7] = 0.01850; x[8] = 0.02100; x[9] = 0.02350; 
    x[10] = 0.02600; x[11] = 0.02850; x[12] = 0.03100; x[13] = 0.03350; x[14] = 0.03600; 
    x[15] = 0.03850; x[16] = 0.04100; x[17] = 0.04350; x[18] = 0.04600; x[19] = 0.04850; 
    x[20] = 0.05100; x[21] = 0.06100; x[22] = 0.07100; x[23] = 0.08100; x[24] = 0.09100; 
    x[25] = 0.10100; x[26] = 0.11000; x[27] = 0.14000; x[28] = 0.17000; x[29] = 0.20000; 
    x[30] = 0.23000; x[31] = 0.26000; x[32] = 0.29000; x[33] = 0.32000; x[34] = 0.35000; 
    x[35] = 0.38000; x[36] = 0.41000; x[37] = 0.44000; x[38] = 0.47000; x[39] = 0.50000; 
    x[40] = 0.53000; x[41] = 0.56000; x[42] = 0.59000; x[43] = 0.62000; x[44] = 0.65000; 
    x[45] = 0.68000; x[46] = 0.71000; x[47] = 0.74000; x[48] = 0.77000; x[49] = 0.80000; 
    x[50] = 0.83000; x[51] = 0.86000; x[52] = 0.89000; x[53] = 0.90900; x[54] = 0.91900; 
    x[55] = 0.92900; x[56] = 0.93900; x[57] = 0.94900; x[58] = 0.95900; x[59] = 0.96900; 
    x[60] = 0.97150; x[61] = 0.97400; x[62] = 0.97650; x[63] = 0.97900; x[64] = 0.98150; 
    x[65] = 0.98400; x[66] = 0.98650; x[67] = 0.98900; x[68] = 0.99150; x[69] = 0.99400; 
    x[70] = 0.99650; x[71] = 0.99900; 
    
    y[0] = -488152237.125032; y[1] = -6106417.392660; y[2] = -928888.519169; y[3] = -275419.075798; y[4] = -112086.183475; 
    y[5] = -54919.102808; y[6] = -30404.350517; y[7] = -18353.443193; y[8] = -11817.153255; y[9] = -7998.407523; 
    y[10] = -5633.701132; y[11] = -4099.225395; y[12] = -3064.431786; y[13] = -2343.769576; y[14] = -1827.963784; 
    y[15] = -1449.997061; y[16] = -1167.315424; y[17] = -952.072591; y[18] = -785.560180; y[19] = -654.913355; 
    y[20] = -551.100752; y[21] = -298.431595; y[22] = -177.764024; y[23] = -113.572753; y[24] = -76.563825; 
    y[25] = -53.853250; y[26] = -40.414559; y[27] = -18.058709; y[28] = -9.504721; y[29] = -5.582971; 
    y[30] = -3.547178; y[31] = -2.389913; y[32] = -1.684719; y[33] = -1.230678; y[34] = -0.924913; 
    y[35] = -0.711112; y[36] = -0.556707; y[37] = -0.441973; y[38] = -0.354481; y[39] = -0.286117; 
    y[40] = -0.231412; y[41] = -0.186561; y[42] = -0.148829; y[43] = -0.116171; y[44] = -0.086981; 
    y[45] = -0.059907; y[46] = -0.033701; y[47] = -0.007065; y[48] = 0.021549; y[49] = 0.054253; 
    y[50] = 0.094341; y[51] = 0.147645; y[52] = 0.226085; y[53] = 0.300556; y[54] = 0.353213; 
    y[55] = 0.420307; y[56] = 0.508982; y[57] = 0.631984; y[58] = 0.814488; y[59] = 1.114152; 
    y[60] = 1.221836; y[61] = 1.350192; y[62] = 1.505817; y[63] = 1.698454; y[64] = 1.943108; 
    y[65] = 2.264164; y[66] = 2.704071; y[67] = 3.343865; y[68] = 4.359923; y[69] = 6.222577; 
    y[70] = 10.745973; y[71] = 37.885700; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 3.5117e11 , 1.8040e4, ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 1->2
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 1.00100; x[1] = 1.00350; x[2] = 1.00600; x[3] = 1.00850; x[4] = 1.01100; 
    x[5] = 1.01350; x[6] = 1.01600; x[7] = 1.01850; x[8] = 1.02100; x[9] = 1.02350; 
    x[10] = 1.02600; x[11] = 1.02850; x[12] = 1.03100; x[13] = 1.03350; x[14] = 1.03600; 
    x[15] = 1.03850; x[16] = 1.04100; x[17] = 1.04350; x[18] = 1.04600; x[19] = 1.04850; 
    x[20] = 1.05100; x[21] = 1.06100; x[22] = 1.07100; x[23] = 1.08100; x[24] = 1.09100; 
    x[25] = 1.10100; x[26] = 1.11000; x[27] = 1.14000; x[28] = 1.17000; x[29] = 1.20000; 
    x[30] = 1.23000; x[31] = 1.26000; x[32] = 1.29000; x[33] = 1.32000; x[34] = 1.35000; 
    x[35] = 1.38000; x[36] = 1.41000; x[37] = 1.44000; x[38] = 1.47000; x[39] = 1.50000; 
    x[40] = 1.53000; x[41] = 1.56000; x[42] = 1.59000; x[43] = 1.62000; x[44] = 1.65000; 
    x[45] = 1.68000; x[46] = 1.71000; x[47] = 1.74000; x[48] = 1.77000; x[49] = 1.80000; 
    x[50] = 1.83000; x[51] = 1.86000; x[52] = 1.89000; x[53] = 1.90900; x[54] = 1.91900; 
    x[55] = 1.92900; x[56] = 1.93900; x[57] = 1.94900; x[58] = 1.95900; x[59] = 1.96900; 
    x[60] = 1.97150; x[61] = 1.97400; x[62] = 1.97650; x[63] = 1.97900; x[64] = 1.98150; 
    x[65] = 1.98400; x[66] = 1.98650; x[67] = 1.98900; x[68] = 1.99150; x[69] = 1.99400; 
    x[70] = 1.99650; x[71] = 1.99900; 
    
    y[0] = -38.105091; y[1] = -10.965371; y[2] = -6.441990; y[3] = -4.579358; y[4] = -3.563332; 
    y[5] = -2.923576; y[6] = -2.483715; y[7] = -2.162713; y[8] = -1.918121; y[9] = -1.725555; 
    y[10] = -1.570007; y[11] = -1.441738; y[12] = -1.334147; y[13] = -1.242608; y[14] = -1.163776; 
    y[15] = -1.095176; y[16] = -1.034938; y[17] = -0.981620; y[18] = -0.934094; y[19] = -0.891466; 
    y[20] = -0.853016; y[21] = -0.730727; y[22] = -0.642896; y[23] = -0.576781; y[24] = -0.525238; 
    y[25] = -0.483955; y[26] = -0.453270; y[27] = -0.379868; y[28] = -0.333043; y[29] = -0.301040; 
    y[30] = -0.278246; y[31] = -0.261651; y[32] = -0.249506; y[33] = -0.240738; y[34] = -0.234664; 
    y[35] = -0.230847; y[36] = -0.229011; y[37] = -0.228994; y[38] = -0.230728; y[39] = -0.234221; 
    y[40] = -0.239555; y[41] = -0.246894; y[42] = -0.256493; y[43] = -0.268730; y[44] = -0.284141; 
    y[45] = -0.303493; y[46] = -0.327894; y[47] = -0.358989; y[48] = -0.399296; y[49] = -0.452871; 
    y[50] = -0.526647; y[51] = -0.633526; y[52] = -0.800504; y[53] = -0.964290; y[54] = -1.081730; 
    y[55] = -1.232542; y[56] = -1.433137; y[57] = -1.712798; y[58] = -2.129373; y[59] = -2.815360; 
    y[60] = -3.062185; y[61] = -3.356526; y[62] = -3.713545; y[63] = -4.155629; y[64] = -4.717264; 
    y[65] = -5.454488; y[66] = -6.464852; y[67] = -7.934586; y[68] = -10.269019; y[69] = -14.549022; 
    y[70] = -24.943677; y[71] = -87.312865;
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 1.8040e4, -4.1457e4 , ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 2->3
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 2.00100; x[1] = 2.00350; x[2] = 2.00600; x[3] = 2.00850; x[4] = 2.01100; 
    x[5] = 2.01350; x[6] = 2.01600; x[7] = 2.01850; x[8] = 2.02100; x[9] = 2.02350; 
    x[10] = 2.02600; x[11] = 2.02850; x[12] = 2.03100; x[13] = 2.03350; x[14] = 2.03600; 
    x[15] = 2.03850; x[16] = 2.04100; x[17] = 2.04350; x[18] = 2.04600; x[19] = 2.04850; 
    x[20] = 2.05100; x[21] = 2.06100; x[22] = 2.07100; x[23] = 2.08100; x[24] = 2.09100; 
    x[25] = 2.10100; x[26] = 2.11000; x[27] = 2.14000; x[28] = 2.17000; x[29] = 2.20000; 
    x[30] = 2.23000; x[31] = 2.26000; x[32] = 2.29000; x[33] = 2.32000; x[34] = 2.35000; 
    x[35] = 2.38000; x[36] = 2.41000; x[37] = 2.44000; x[38] = 2.47000; x[39] = 2.50000; 
    x[40] = 2.53000; x[41] = 2.56000; x[42] = 2.59000; x[43] = 2.62000; x[44] = 2.65000; 
    x[45] = 2.68000; x[46] = 2.71000; x[47] = 2.74000; x[48] = 2.77000; x[49] = 2.80000; 
    x[50] = 2.83000; x[51] = 2.86000; x[52] = 2.89000; x[53] = 2.90900; x[54] = 2.91900; 
    x[55] = 2.92900; x[56] = 2.93900; x[57] = 2.94900; x[58] = 2.95900; x[59] = 2.96900; 
    x[60] = 2.97150; x[61] = 2.97400; x[62] = 2.97650; x[63] = 2.97900; x[64] = 2.98150; 
    x[65] = 2.98400; x[66] = 2.98650; x[67] = 2.98900; x[68] = 2.99150; x[69] = 2.99400; 
    x[70] = 2.99650; x[71] = 2.99900; 
    
    y[0] = 87.321771; y[1] = 24.952583; y[2] = 14.557929; y[3] = 10.277926; y[4] = 7.943494; 
    y[5] = 6.473760; y[6] = 5.463398; y[7] = 4.726175; y[8] = 4.164541; y[9] = 3.722458; 
    y[10] = 3.365441; y[11] = 3.071102; y[12] = 2.824279; y[13] = 2.614333; y[14] = 2.433582; 
    y[15] = 2.276338; y[16] = 2.138301; y[17] = 2.016161; y[18] = 1.907324; y[19] = 1.809735; 
    y[20] = 1.721738; y[21] = 1.442092; y[22] = 1.241515; y[23] = 1.090722; y[24] = 0.973306; 
    y[25] = 0.879353; y[26] = 0.809571; y[27] = 0.642696; y[28] = 0.535948; y[29] = 0.462333; 
    y[30] = 0.408953; y[31] = 0.368876; y[32] = 0.338054; y[33] = 0.313972; y[34] = 0.294993; 
    y[35] = 0.280018; y[36] = 0.268289; y[37] = 0.259285; y[38] = 0.252644; y[39] = 0.248133; 
    y[40] = 0.245614; y[41] = 0.245042; y[42] = 0.246456; y[43] = 0.249987; y[44] = 0.255884; 
    y[45] = 0.264542; y[46] = 0.276574; y[47] = 0.292918; y[48] = 0.315042; y[49] = 0.345333; 
    y[50] = 0.387898; y[51] = 0.450403; y[52] = 0.548908; y[53] = 0.645958; y[54] = 0.715670; 
    y[55] = 0.805277; y[56] = 0.924551; y[57] = 1.090929; y[58] = 1.338862; y[59] = 1.747252; 
    y[60] = 1.894211; y[61] = 2.069468; y[62] = 2.282051; y[63] = 2.545292; y[64] = 2.879728; 
    y[65] = 3.318730; y[66] = 3.920389; y[67] = 4.795609; y[68] = 6.185764; y[69] = 8.734522; 
    y[70] = 14.924602; y[71] = 52.065907; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, -4.1457e4, 2.4688e4   , ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 3->4
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 3.00100; x[1] = 3.00350; x[2] = 3.00600; x[3] = 3.00850; x[4] = 3.01100; 
    x[5] = 3.01350; x[6] = 3.01600; x[7] = 3.01850; x[8] = 3.02100; x[9] = 3.02350; 
    x[10] = 3.02600; x[11] = 3.02850; x[12] = 3.03100; x[13] = 3.03350; x[14] = 3.03600; 
    x[15] = 3.03850; x[16] = 3.04100; x[17] = 3.04350; x[18] = 3.04600; x[19] = 3.04850; 
    x[20] = 3.05100; x[21] = 3.06100; x[22] = 3.07100; x[23] = 3.08100; x[24] = 3.09100; 
    x[25] = 3.10100; x[26] = 3.11000; x[27] = 3.14000; x[28] = 3.17000; x[29] = 3.20000; 
    x[30] = 3.23000; x[31] = 3.26000; x[32] = 3.29000; x[33] = 3.32000; x[34] = 3.35000; 
    x[35] = 3.38000; x[36] = 3.41000; x[37] = 3.44000; x[38] = 3.47000; x[39] = 3.50000; 
    x[40] = 3.53000; x[41] = 3.56000; x[42] = 3.59000; x[43] = 3.62000; x[44] = 3.65000; 
    x[45] = 3.68000; x[46] = 3.71000; x[47] = 3.74000; x[48] = 3.77000; x[49] = 3.80000; 
    x[50] = 3.83000; x[51] = 3.86000; x[52] = 3.89000; x[53] = 3.90900; x[54] = 3.91900; 
    x[55] = 3.92900; x[56] = 3.93900; x[57] = 3.94900; x[58] = 3.95900; x[59] = 3.96900; 
    x[60] = 3.97150; x[61] = 3.97400; x[62] = 3.97650; x[63] = 3.97900; x[64] = 3.98150; 
    x[65] = 3.98400; x[66] = 3.98650; x[67] = 3.98900; x[68] = 3.99150; x[69] = 3.99400; 
    x[70] = 3.99650; x[71] = 3.99900; 
    
    y[0] = -51.930334; y[1] = -14.789027; y[2] = -8.598943; y[3] = -6.050178; y[4] = -4.660013; 
    y[5] = -3.784782; y[6] = -3.183108; y[7] = -2.744090; y[8] = -2.409635; y[9] = -2.146373; 
    y[10] = -1.933766; y[11] = -1.758484; y[12] = -1.611496; y[13] = -1.486468; y[14] = -1.378824; 
    y[15] = -1.285178; y[16] = -1.202968; y[17] = -1.130224; y[18] = -1.065401; y[19] = -1.007274; 
    y[20] = -0.954859; y[21] = -0.788265; y[22] = -0.668737; y[23] = -0.578837; y[24] = -0.508791; 
    y[25] = -0.452698; y[26] = -0.410996; y[27] = -0.311009; y[28] = -0.246633; y[29] = -0.201782; 
    y[30] = -0.168762; y[31] = -0.143430; y[32] = -0.123352; y[33] = -0.107006; y[34] = -0.093387; 
    y[35] = -0.081800; y[36] = -0.071750; y[37] = -0.062866; y[38] = -0.054863; y[39] = -0.047512; 
    y[40] = -0.040618; y[41] = -0.034008; y[42] = -0.027518; y[43] = -0.020978; y[44] = -0.014200; 
    y[45] = -0.006960; y[46] = 0.001031; y[47] = 0.010170; y[48] = 0.021037; y[49] = 0.034543; 
    y[50] = 0.052218; y[51] = 0.076888; y[52] = 0.114442; y[53] = 0.150759; y[54] = 0.176642; 
    y[55] = 0.209767; y[56] = 0.253705; y[57] = 0.314827; y[58] = 0.405720; y[59] = 0.555211; 
    y[60] = 0.608971; y[61] = 0.673067; y[62] = 0.750799; y[63] = 0.847038; y[64] = 0.969287; 
    y[65] = 1.129738; y[66] = 1.349615; y[67] = 1.669437; y[68] = 2.177391; y[69] = 3.108645; 
    y[70] = 5.370270; y[71] = 18.940063; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 2.4688e4, 9.0199e3   , ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 4->5
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 4.00100; x[1] = 4.00350; x[2] = 4.00600; x[3] = 4.00850; x[4] = 4.01100; 
    x[5] = 4.01350; x[6] = 4.01600; x[7] = 4.01850; x[8] = 4.02100; x[9] = 4.02350; 
    x[10] = 4.02600; x[11] = 4.02850; x[12] = 4.03100; x[13] = 4.03350; x[14] = 4.03600; 
    x[15] = 4.03850; x[16] = 4.04100; x[17] = 4.04350; x[18] = 4.04600; x[19] = 4.04850; 
    x[20] = 4.05100; x[21] = 4.06100; x[22] = 4.07100; x[23] = 4.08100; x[24] = 4.09100; 
    x[25] = 4.10100; x[26] = 4.11000; x[27] = 4.14000; x[28] = 4.17000; x[29] = 4.20000; 
    x[30] = 4.23000; x[31] = 4.26000; x[32] = 4.29000; x[33] = 4.32000; x[34] = 4.35000; 
    x[35] = 4.38000; x[36] = 4.41000; x[37] = 4.44000; x[38] = 4.47000; x[39] = 4.50000; 
    x[40] = 4.53000; x[41] = 4.56000; x[42] = 4.59000; x[43] = 4.62000; x[44] = 4.65000; 
    x[45] = 4.68000; x[46] = 4.71000; x[47] = 4.74000; x[48] = 4.77000; x[49] = 4.80000; 
    x[50] = 4.83000; x[51] = 4.86000; x[52] = 4.89000; x[53] = 4.90900; x[54] = 4.91900; 
    x[55] = 4.92900; x[56] = 4.93900; x[57] = 4.94900; x[58] = 4.95900; x[59] = 4.96900; 
    x[60] = 4.97150; x[61] = 4.97400; x[62] = 4.97650; x[63] = 4.97900; x[64] = 4.98150; 
    x[65] = 4.98400; x[66] = 4.98650; x[67] = 4.98900; x[68] = 4.99150; x[69] = 4.99400; 
    x[70] = 4.99650; x[71] = 4.99900; 

    y[0] = -19.055390; y[1] = -5.485599; y[2] = -3.223978; y[3] = -2.292731; y[4] = -1.784784; 
    y[5] = -1.464973; y[6] = -1.245109; y[7] = -1.084672; y[8] = -0.962441; y[9] = -0.866221; 
    y[10] = -0.788509; y[11] = -0.724437; y[12] = -0.670703; y[13] = -0.624993; y[14] = -0.585636; 
    y[15] = -0.551395; y[16] = -0.521335; y[17] = -0.494733; y[18] = -0.471027; y[19] = -0.449769; 
    y[20] = -0.430600; y[21] = -0.369671; y[22] = -0.325961; y[23] = -0.293099; y[24] = -0.267515; 
    y[25] = -0.247053; y[26] = -0.231866; y[27] = -0.195641; y[28] = -0.172651; y[29] = -0.157027; 
    y[30] = -0.145972; y[31] = -0.137988; y[32] = -0.132208; y[33] = -0.128100; y[34] = -0.125329; 
    y[35] = -0.123682; y[36] = -0.123025; y[37] = -0.123285; y[38] = -0.124431; y[39] = -0.126475; 
    y[40] = -0.129465; y[41] = -0.133492; y[42] = -0.138695; y[43] = -0.145275; y[44] = -0.153519; 
    y[45] = -0.163834; y[46] = -0.176810; y[47] = -0.193316; y[48] = -0.214689; y[49] = -0.243074; 
    y[50] = -0.282143; y[51] = -0.338726; y[52] = -0.427112; y[53] = -0.513804; y[54] = -0.575964; 
    y[55] = -0.655788; y[56] = -0.761962; y[57] = -0.909985; y[58] = -1.130479; y[59] = -1.493576; 
    y[60] = -1.624223; y[61] = -1.780020; y[62] = -1.968995; y[63] = -2.202995; y[64] = -2.500276; 
    y[65] = -2.890499; y[66] = -3.425299; y[67] = -4.203251; y[68] = -5.438903; y[69] = -7.704378; 
    y[70] = -13.206439; y[71] = -46.219485; 

    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 9.0199e3, -2.1944e4   , ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 5->6
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 5.00100; x[1] = 5.00350; x[2] = 5.00600; x[3] = 5.00850; x[4] = 5.01100; 
    x[5] = 5.01350; x[6] = 5.01600; x[7] = 5.01850; x[8] = 5.02100; x[9] = 5.02350; 
    x[10] = 5.02600; x[11] = 5.02850; x[12] = 5.03100; x[13] = 5.03350; x[14] = 5.03600; 
    x[15] = 5.03850; x[16] = 5.04100; x[17] = 5.04350; x[18] = 5.04600; x[19] = 5.04850; 
    x[20] = 5.05100; x[21] = 5.06100; x[22] = 5.07100; x[23] = 5.08100; x[24] = 5.09100; 
    x[25] = 5.10100; x[26] = 5.11000; x[27] = 5.14000; x[28] = 5.17000; x[29] = 5.20000; 
    x[30] = 5.23000; x[31] = 5.26000; x[32] = 5.29000; x[33] = 5.32000; x[34] = 5.35000; 
    x[35] = 5.38000; x[36] = 5.41000; x[37] = 5.44000; x[38] = 5.47000; x[39] = 5.50000; 
    x[40] = 5.53000; x[41] = 5.56000; x[42] = 5.59000; x[43] = 5.62000; x[44] = 5.65000; 
    x[45] = 5.68000; x[46] = 5.71000; x[47] = 5.74000; x[48] = 5.77000; x[49] = 5.80000; 
    x[50] = 5.83000; x[51] = 5.86000; x[52] = 5.89000; x[53] = 5.90900; x[54] = 5.91900; 
    x[55] = 5.92900; x[56] = 5.93900; x[57] = 5.94900; x[58] = 5.95900; x[59] = 5.96900; 
    x[60] = 5.97150; x[61] = 5.97400; x[62] = 5.97650; x[63] = 5.97900; x[64] = 5.98150; 
    x[65] = 5.98400; x[66] = 5.98650; x[67] = 5.98900; x[68] = 5.99150; x[69] = 5.99400; 
    x[70] = 5.99650; x[71] = 5.99900; 
    
    y[0] = 46.217534; y[1] = 13.204489; y[2] = 7.702428; y[3] = 5.436954; y[4] = 4.201303; 
    y[5] = 3.423351; y[6] = 2.888552; y[7] = 2.498331; y[8] = 2.201052; y[9] = 1.967053; 
    y[10] = 1.778081; y[11] = 1.622286; y[12] = 1.491641; y[13] = 1.380516; y[14] = 1.284845; 
    y[15] = 1.201617; y[16] = 1.128555; y[17] = 1.063908; y[18] = 1.006302; y[19] = 0.954650; 
    y[20] = 0.908076; y[21] = 0.760070; y[22] = 0.653917; y[23] = 0.574117; y[24] = 0.511984; 
    y[25] = 0.462273; y[26] = 0.425354; y[27] = 0.337091; y[28] = 0.280665; y[29] = 0.241787; 
    y[30] = 0.213633; y[31] = 0.192536; y[32] = 0.176352; y[33] = 0.163755; y[34] = 0.153880; 
    y[35] = 0.146148; y[36] = 0.140163; y[37] = 0.135652; y[38] = 0.132433; y[39] = 0.130387; 
    y[40] = 0.129453; y[41] = 0.129619; y[42] = 0.130920; y[43] = 0.133450; y[44] = 0.137367; 
    y[45] = 0.142921; y[46] = 0.150494; y[47] = 0.160664; y[48] = 0.174335; y[49] = 0.192974; 
    y[50] = 0.219101; y[51] = 0.257418; y[52] = 0.317775; y[53] = 0.377239; y[54] = 0.419955; 
    y[55] = 0.474868; y[56] = 0.547968; y[57] = 0.649948; y[58] = 0.801934; y[59] = 1.052306; 
    y[60] = 1.142408; y[61] = 1.249861; y[62] = 1.380202; y[63] = 1.541606; y[64] = 1.746666; 
    y[65] = 2.015846; y[66] = 2.384765; y[67] = 2.921430; y[68] = 3.773850; y[69] = 5.336719; 
    y[70] = 9.132424; y[71] = 31.907240; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, -2.1944e4, 1.51386e4   , ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }

};

LuescherW80::LuescherW80(){

  // 0->1
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 0.00100; x[1] = 0.00350; x[2] = 0.00600; x[3] = 0.00850; x[4] = 0.01100; 
    x[5] = 0.01350; x[6] = 0.01600; x[7] = 0.01850; x[8] = 0.02100; x[9] = 0.02350; 
    x[10] = 0.02600; x[11] = 0.02850; x[12] = 0.03100; x[13] = 0.03350; x[14] = 0.03600; 
    x[15] = 0.03850; x[16] = 0.04100; x[17] = 0.04350; x[18] = 0.04600; x[19] = 0.04850; 
    x[20] = 0.05100; x[21] = 0.06100; x[22] = 0.07100; x[23] = 0.08100; x[24] = 0.09100; 
    x[25] = 0.10100; x[26] = 0.11000; x[27] = 0.14000; x[28] = 0.17000; x[29] = 0.20000; 
    x[30] = 0.23000; x[31] = 0.26000; x[32] = 0.29000; x[33] = 0.32000; x[34] = 0.35000; 
    x[35] = 0.38000; x[36] = 0.41000; x[37] = 0.44000; x[38] = 0.47000; x[39] = 0.50000; 
    x[40] = 0.53000; x[41] = 0.56000; x[42] = 0.59000; x[43] = 0.62000; x[44] = 0.65000; 
    x[45] = 0.68000; x[46] = 0.71000; x[47] = 0.74000; x[48] = 0.77000; x[49] = 0.80000; 
    x[50] = 0.83000; x[51] = 0.86000; x[52] = 0.89000; x[53] = 0.90900; x[54] = 0.91900; 
    x[55] = 0.92900; x[56] = 0.93900; x[57] = 0.94900; x[58] = 0.95900; x[59] = 0.96900; 
    x[60] = 0.97150; x[61] = 0.97400; x[62] = 0.97650; x[63] = 0.97900; x[64] = 0.98150; 
    x[65] = 0.98400; x[66] = 0.98650; x[67] = 0.98900; x[68] = 0.99150; x[69] = 0.99400; 
    x[70] = 0.99650; x[71] = 0.99900; 
    
    y[0] = 13707932760793.052734; y[1] = 48997407839.692345; y[2] = 4348176181.060723; y[3] = 910148315.551574; y[4] = 286247006.429635; 
    y[5] = 114292546.685814; y[6] = 53394055.928634; y[7] = 27878805.463784; y[8] = 15815224.532464; y[9] = 9566943.431074; 
    y[10] = 6091385.310603; y[11] = 4044017.041860; y[12] = 2779758.696260; y[13] = 1967678.448165; y[14] = 1428291.069361; 
    y[15] = 1059566.168235; y[16] = 801121.864633; y[17] = 615956.505201; y[18] = 480693.683527; y[19] = 380162.248697; 
    y[20] = 304277.876060; y[21] = 137873.714869; y[22] = 70624.016186; y[23] = 39591.474117; y[24] = 23784.151641; 
    y[25] = 15091.701135; y[26] = 10411.775203; y[27] = 3673.119087; y[28] = 1601.828183; y[29] = 805.832467; 
    y[30] = 449.346854; y[31] = 270.834784; y[32] = 173.496389; y[33] = 116.733278; y[34] = 81.783929; 
    y[35] = 59.278648; y[36] = 44.231073; y[37] = 33.842992; y[38] = 26.471919; y[39] = 21.115833; 
    y[40] = 17.142652; y[41] = 14.141855; y[42] = 11.839926; y[43] = 10.050539; y[44] = 8.644348; 
    y[45] = 7.530206; y[46] = 6.643286; y[47] = 5.937538; y[48] = 5.381043; y[49] = 4.953618; 
    y[50] = 4.646777; y[51] = 4.467542; y[52] = 4.451807; y[53] = 4.570206; y[54] = 4.695235; 
    y[55] = 4.884394; y[56] = 5.166888; y[57] = 5.595048; y[58] = 6.272495; y[59] = 7.436855; 
    y[60] = 7.863655; y[61] = 8.375937; y[62] = 9.000916; y[63] = 9.778772; y[64] = 10.771401; 
    y[65] = 12.079391; y[66] = 13.877836; y[67] = 16.501013; y[68] = 20.676466; y[69] = 28.344321; 
    y[70] = 46.987921; y[71] = 158.924074; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, -9.99617e15, 7.4409e4   , ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 1->2
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 1.00100; x[1] = 1.00350; x[2] = 1.00600; x[3] = 1.00850; x[4] = 1.01100; 
    x[5] = 1.01350; x[6] = 1.01600; x[7] = 1.01850; x[8] = 1.02100; x[9] = 1.02350; 
    x[10] = 1.02600; x[11] = 1.02850; x[12] = 1.03100; x[13] = 1.03350; x[14] = 1.03600; 
    x[15] = 1.03850; x[16] = 1.04100; x[17] = 1.04350; x[18] = 1.04600; x[19] = 1.04850; 
    x[20] = 1.05100; x[21] = 1.06100; x[22] = 1.07100; x[23] = 1.08100; x[24] = 1.09100; 
    x[25] = 1.10100; x[26] = 1.11000; x[27] = 1.14000; x[28] = 1.17000; x[29] = 1.20000; 
    x[30] = 1.23000; x[31] = 1.26000; x[32] = 1.29000; x[33] = 1.32000; x[34] = 1.35000; 
    x[35] = 1.38000; x[36] = 1.41000; x[37] = 1.44000; x[38] = 1.47000; x[39] = 1.50000; 
    x[40] = 1.53000; x[41] = 1.56000; x[42] = 1.59000; x[43] = 1.62000; x[44] = 1.65000; 
    x[45] = 1.68000; x[46] = 1.71000; x[47] = 1.74000; x[48] = 1.77000; x[49] = 1.80000; 
    x[50] = 1.83000; x[51] = 1.86000; x[52] = 1.89000; x[53] = 1.90900; x[54] = 1.91900; 
    x[55] = 1.92900; x[56] = 1.93900; x[57] = 1.94900; x[58] = 1.95900; x[59] = 1.96900; 
    x[60] = 1.97150; x[61] = 1.97400; x[62] = 1.97650; x[63] = 1.97900; x[64] = 1.98150; 
    x[65] = 1.98400; x[66] = 1.98650; x[67] = 1.98900; x[68] = 1.99150; x[69] = 1.99400; 
    x[70] = 1.99650; x[71] = 1.99900; 
    
    y[0] = -154.549986; y[1] = -42.613536; y[2] = -23.969310; y[3] = -16.300498; y[4] = -12.123758; 
    y[5] = -9.498963; y[6] = -7.698569; y[7] = -6.388301; y[8] = -5.393059; y[9] = -4.612259; 
    y[10] = -3.984002; y[11] = -3.468109; y[12] = -3.037362; y[13] = -2.672669; y[14] = -2.360241; 
    y[15] = -2.089873; y[16] = -1.853846; y[17] = -1.646220; y[18] = -1.462343; y[19] = -1.298524; 
    y[20] = -1.151797; y[21] = -0.693493; y[22] = -0.375197; y[23] = -0.144440; y[24] = 0.028144; 
    y[25] = 0.160265; y[26] = 0.254004; y[27] = 0.457048; y[28] = 0.564067; y[29] = 0.622080; 
    y[30] = 0.653049; y[31] = 0.668438; y[32] = 0.674710; y[33] = 0.675729; y[34] = 0.673916; 
    y[35] = 0.670851; y[36] = 0.667614; y[37] = 0.664980; y[38] = 0.663544; y[39] = 0.663806; 
    y[40] = 0.666228; y[41] = 0.671290; y[42] = 0.679534; y[43] = 0.691623; y[44] = 0.708415; 
    y[45] = 0.731069; y[46] = 0.761216; y[47] = 0.801232; y[48] = 0.854742; y[49] = 0.927549; 
    y[50] = 1.029567; y[51] = 1.179226; y[52] = 1.415081; y[53] = 1.647521; y[54] = 1.814522; 
    y[55] = 2.029220; y[56] = 2.315046; y[57] = 2.713812; y[58] = 3.308121; y[59] = 4.287163; 
    y[60] = 4.639491; y[61] = 5.059668; y[62] = 5.569347; y[63] = 6.200490; y[64] = 7.002341; 
    y[65] = 8.054916; y[66] = 9.497506; y[67] = 11.596027; y[68] = 14.929241; y[69] = 21.040507; 
    y[70] = 35.882792; y[71] = 124.938718;
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 7.4409e4, 5.9196e4, ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 2->3
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 2.00100; x[1] = 2.00350; x[2] = 2.00600; x[3] = 2.00850; x[4] = 2.01100; 
    x[5] = 2.01350; x[6] = 2.01600; x[7] = 2.01850; x[8] = 2.02100; x[9] = 2.02350; 
    x[10] = 2.02600; x[11] = 2.02850; x[12] = 2.03100; x[13] = 2.03350; x[14] = 2.03600; 
    x[15] = 2.03850; x[16] = 2.04100; x[17] = 2.04350; x[18] = 2.04600; x[19] = 2.04850; 
    x[20] = 2.05100; x[21] = 2.06100; x[22] = 2.07100; x[23] = 2.08100; x[24] = 2.09100; 
    x[25] = 2.10100; x[26] = 2.11000; x[27] = 2.14000; x[28] = 2.17000; x[29] = 2.20000; 
    x[30] = 2.23000; x[31] = 2.26000; x[32] = 2.29000; x[33] = 2.32000; x[34] = 2.35000; 
    x[35] = 2.38000; x[36] = 2.41000; x[37] = 2.44000; x[38] = 2.47000; x[39] = 2.50000; 
    x[40] = 2.53000; x[41] = 2.56000; x[42] = 2.59000; x[43] = 2.62000; x[44] = 2.65000; 
    x[45] = 2.68000; x[46] = 2.71000; x[47] = 2.74000; x[48] = 2.77000; x[49] = 2.80000; 
    x[50] = 2.83000; x[51] = 2.86000; x[52] = 2.89000; x[53] = 2.90900; x[54] = 2.91900; 
    x[55] = 2.92900; x[56] = 2.93900; x[57] = 2.94900; x[58] = 2.95900; x[59] = 2.96900; 
    x[60] = 2.97150; x[61] = 2.97400; x[62] = 2.97650; x[63] = 2.97900; x[64] = 2.98150; 
    x[65] = 2.98400; x[66] = 2.98650; x[67] = 2.98900; x[68] = 2.99150; x[69] = 2.99400; 
    x[70] = 2.99650; x[71] = 2.99900; 
    
    y[0] = -124.419453; y[1] = -35.363522; y[2] = -20.521227; y[3] = -14.409944; y[4] = -11.076709; 
    y[5] = -8.978161; y[6] = -7.535539; y[7] = -6.482925; y[8] = -5.681031; y[9] = -5.049838; 
    y[10] = -4.540105; y[11] = -4.119868; y[12] = -3.767474; y[13] = -3.467734; y[14] = -3.209678; 
    y[15] = -2.985185; y[16] = -2.788114; y[17] = -2.613738; y[18] = -2.458356; y[19] = -2.319030; 
    y[20] = -2.193399; y[21] = -1.794137; y[22] = -1.507727; y[23] = -1.292355; y[24] = -1.124590; 
    y[25] = -0.990279; y[26] = -0.890451; y[27] = -0.651244; y[28] = -0.497400; y[29] = -0.390345; 
    y[30] = -0.311629; y[31] = -0.251315; y[32] = -0.203570; y[33] = -0.164744; y[34] = -0.132429; 
    y[35] = -0.104967; y[36] = -0.081172; y[37] = -0.060164; y[38] = -0.041270; y[39] = -0.023952; 
    y[40] = -0.007764; y[41] = 0.007685; y[42] = 0.022760; y[43] = 0.037823; y[44] = 0.053266; 
    y[45] = 0.069542; y[46] = 0.087224; y[47] = 0.107085; y[48] = 0.130241; y[49] = 0.158426; 
    y[50] = 0.194542; y[51] = 0.243929; y[52] = 0.317689; y[53] = 0.388064; y[54] = 0.437867; 
    y[55] = 0.501316; y[56] = 0.585132; y[57] = 0.701305; y[58] = 0.873522; y[59] = 1.156027; 
    y[60] = 1.257493; y[61] = 1.378411; y[62] = 1.524990; y[63] = 1.706395; y[64] = 1.936745; 
    y[65] = 2.238983; y[66] = 2.653047; y[67] = 3.255182; y[68] = 4.211334; y[69] = 5.964025; 
    y[70] = 10.220122; y[71] = 35.755186;

    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 5.9196e4, 1.6973e4  , ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 3->4
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 3.00100; x[1] = 3.00350; x[2] = 3.00600; x[3] = 3.00850; x[4] = 3.01100; 
    x[5] = 3.01350; x[6] = 3.01600; x[7] = 3.01850; x[8] = 3.02100; x[9] = 3.02350; 
    x[10] = 3.02600; x[11] = 3.02850; x[12] = 3.03100; x[13] = 3.03350; x[14] = 3.03600; 
    x[15] = 3.03850; x[16] = 3.04100; x[17] = 3.04350; x[18] = 3.04600; x[19] = 3.04850; 
    x[20] = 3.05100; x[21] = 3.06100; x[22] = 3.07100; x[23] = 3.08100; x[24] = 3.09100; 
    x[25] = 3.10100; x[26] = 3.11000; x[27] = 3.14000; x[28] = 3.17000; x[29] = 3.20000; 
    x[30] = 3.23000; x[31] = 3.26000; x[32] = 3.29000; x[33] = 3.32000; x[34] = 3.35000; 
    x[35] = 3.38000; x[36] = 3.41000; x[37] = 3.44000; x[38] = 3.47000; x[39] = 3.50000; 
    x[40] = 3.53000; x[41] = 3.56000; x[42] = 3.59000; x[43] = 3.62000; x[44] = 3.65000; 
    x[45] = 3.68000; x[46] = 3.71000; x[47] = 3.74000; x[48] = 3.77000; x[49] = 3.80000; 
    x[50] = 3.83000; x[51] = 3.86000; x[52] = 3.89000; x[53] = 3.90900; x[54] = 3.91900; 
    x[55] = 3.92900; x[56] = 3.93900; x[57] = 3.94900; x[58] = 3.95900; x[59] = 3.96900; 
    x[60] = 3.97150; x[61] = 3.97400; x[62] = 3.97650; x[63] = 3.97900; x[64] = 3.98150; 
    x[65] = 3.98400; x[66] = 3.98650; x[67] = 3.98900; x[68] = 3.99150; x[69] = 3.99400; 
    x[70] = 3.99650; x[71] = 3.99900; 
    
    y[0] = -35.741897; y[1] = -10.206834; y[2] = -5.950737; y[3] = -4.198049; y[4] = -3.241899; 
    y[5] = -2.639768; y[6] = -2.225708; y[7] = -1.923474; y[8] = -1.693129; y[9] = -1.511730; 
    y[10] = -1.365157; y[11] = -1.244246; y[12] = -1.142789; y[13] = -1.056429; y[14] = -0.982022; 
    y[15] = -0.917240; y[16] = -0.860321; y[17] = -0.809909; y[18] = -0.764945; y[19] = -0.724585; 
    y[20] = -0.688153; y[21] = -0.572039; y[22] = -0.488292; y[23] = -0.424924; y[24] = -0.375214; 
    y[25] = -0.335103; y[26] = -0.305044; y[27] = -0.231696; y[28] = -0.182834; y[29] = -0.147365; 
    y[30] = -0.119962; y[31] = -0.097737; y[32] = -0.078976; y[33] = -0.062584; y[34] = -0.047817; 
    y[35] = -0.034136; y[36] = -0.021129; y[37] = -0.008456; y[38] = 0.004181; y[39] = 0.017065; 
    y[40] = 0.030484; y[41] = 0.044754; y[42] = 0.060240; y[43] = 0.077389; y[44] = 0.096772; 
    y[45] = 0.119153; y[46] = 0.145586; y[47] = 0.177599; y[48] = 0.217497; y[49] = 0.268955; 
    y[50] = 0.338229; y[51] = 0.436923; y[52] = 0.589289; y[53] = 0.737744; y[54] = 0.843874; 
    y[55] = 0.979929; y[56] = 1.160640; y[57] = 1.412285; y[58] = 1.786785; y[59] = 2.403054; 
    y[60] = 2.624723; y[61] = 2.889035; y[62] = 3.209599; y[63] = 3.606506; y[64] = 4.110705; 
    y[65] = 4.772492; y[66] = 5.679415; y[67] = 6.998613; y[68] = 9.093861; y[69] = 12.935221; 
    y[70] = 22.264367; y[71] = 78.239705; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 1.6973e4, 3.7207e4   , ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 4->5
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 4.00100; x[1] = 4.00350; x[2] = 4.00600; x[3] = 4.00850; x[4] = 4.01100; 
    x[5] = 4.01350; x[6] = 4.01600; x[7] = 4.01850; x[8] = 4.02100; x[9] = 4.02350; 
    x[10] = 4.02600; x[11] = 4.02850; x[12] = 4.03100; x[13] = 4.03350; x[14] = 4.03600; 
    x[15] = 4.03850; x[16] = 4.04100; x[17] = 4.04350; x[18] = 4.04600; x[19] = 4.04850; 
    x[20] = 4.05100; x[21] = 4.06100; x[22] = 4.07100; x[23] = 4.08100; x[24] = 4.09100; 
    x[25] = 4.10100; x[26] = 4.11000; x[27] = 4.14000; x[28] = 4.17000; x[29] = 4.20000; 
    x[30] = 4.23000; x[31] = 4.26000; x[32] = 4.29000; x[33] = 4.32000; x[34] = 4.35000; 
    x[35] = 4.38000; x[36] = 4.41000; x[37] = 4.44000; x[38] = 4.47000; x[39] = 4.50000; 
    x[40] = 4.53000; x[41] = 4.56000; x[42] = 4.59000; x[43] = 4.62000; x[44] = 4.65000; 
    x[45] = 4.68000; x[46] = 4.71000; x[47] = 4.74000; x[48] = 4.77000; x[49] = 4.80000; 
    x[50] = 4.83000; x[51] = 4.86000; x[52] = 4.89000; x[53] = 4.90900; x[54] = 4.91900; 
    x[55] = 4.92900; x[56] = 4.93900; x[57] = 4.94900; x[58] = 4.95900; x[59] = 4.96900; 
    x[60] = 4.97150; x[61] = 4.97400; x[62] = 4.97650; x[63] = 4.97900; x[64] = 4.98150; 
    x[65] = 4.98400; x[66] = 4.98650; x[67] = 4.98900; x[68] = 4.99150; x[69] = 4.99400; 
    x[70] = 4.99650; x[71] = 4.99900; 
    
    y[0] = -78.491577; y[1] = -22.516243; y[2] = -13.187102; y[3] = -9.345750; y[4] = -7.250513; 
    y[5] = -5.931329; y[6] = -5.024423; y[7] = -4.362656; y[8] = -3.858479; y[9] = -3.461598; 
    y[10] = -3.141062; y[11] = -2.876782; y[12] = -2.655146; y[13] = -2.466609; y[14] = -2.304274; 
    y[15] = -2.163039; y[16] = -2.039043; y[17] = -1.929314; y[18] = -1.831527; y[19] = -1.743835; 
    y[20] = -1.664754; y[21] = -1.413366; y[22] = -1.232960; y[23] = -1.097255; y[24] = -0.991524; 
    y[25] = -0.906871; y[26] = -0.843959; y[27] = -0.693358; y[28] = -0.596886; y[29] = -0.530316; 
    y[30] = -0.482070; y[31] = -0.445931; y[32] = -0.418265; y[33] = -0.396822; y[34] = -0.380139; 
    y[35] = -0.367237; y[36] = -0.357451; y[37] = -0.350326; y[38] = -0.345558; y[39] = -0.342962; 
    y[40] = -0.342448; y[41] = -0.344015; y[42] = -0.347752; y[43] = -0.353850; y[44] = -0.362625; 
    y[45] = -0.374564; y[46] = -0.390401; y[47] = -0.411249; y[48] = -0.438833; y[49] = -0.475951; 
    y[50] = -0.527399; y[51] = -0.602119; y[52] = -0.718830; y[53] = -0.833156; y[54] = -0.915042; 
    y[55] = -1.020109; y[56] = -1.159738; y[57] = -1.354239; y[58] = -1.643734; y[59] = -2.120118; 
    y[60] = -2.291464; y[61] = -2.495767; y[62] = -2.743545; y[63] = -3.050322; y[64] = -3.440017; 
    y[65] = -3.951496; y[66] = -4.652416; y[67] = -5.671940; y[68] = -7.291187; y[69] = -10.259807; 
    y[70] = -17.469310; y[71] = -60.726296;

    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y, 3.7207e4, -2.8753e4   , ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
  // 5->6
  {
    NR::Vec_DP x(72);
    NR::Vec_DP y(72);

    x[0] = 5.00100; x[1] = 5.00350; x[2] = 5.00600; x[3] = 5.00850; x[4] = 5.01100; 
    x[5] = 5.01350; x[6] = 5.01600; x[7] = 5.01850; x[8] = 5.02100; x[9] = 5.02350; 
    x[10] = 5.02600; x[11] = 5.02850; x[12] = 5.03100; x[13] = 5.03350; x[14] = 5.03600; 
    x[15] = 5.03850; x[16] = 5.04100; x[17] = 5.04350; x[18] = 5.04600; x[19] = 5.04850; 
    x[20] = 5.05100; x[21] = 5.06100; x[22] = 5.07100; x[23] = 5.08100; x[24] = 5.09100; 
    x[25] = 5.10100; x[26] = 5.11000; x[27] = 5.14000; x[28] = 5.17000; x[29] = 5.20000; 
    x[30] = 5.23000; x[31] = 5.26000; x[32] = 5.29000; x[33] = 5.32000; x[34] = 5.35000; 
    x[35] = 5.38000; x[36] = 5.41000; x[37] = 5.44000; x[38] = 5.47000; x[39] = 5.50000; 
    x[40] = 5.53000; x[41] = 5.56000; x[42] = 5.59000; x[43] = 5.62000; x[44] = 5.65000; 
    x[45] = 5.68000; x[46] = 5.71000; x[47] = 5.74000; x[48] = 5.77000; x[49] = 5.80000; 
    x[50] = 5.83000; x[51] = 5.86000; x[52] = 5.89000; x[53] = 5.90900; x[54] = 5.91900; 
    x[55] = 5.92900; x[56] = 5.93900; x[57] = 5.94900; x[58] = 5.95900; x[59] = 5.96900; 
    x[60] = 5.97150; x[61] = 5.97400; x[62] = 5.97650; x[63] = 5.97900; x[64] = 5.98150; 
    x[65] = 5.98400; x[66] = 5.98650; x[67] = 5.98900; x[68] = 5.99150; x[69] = 5.99400; 
    x[70] = 5.99650; x[71] = 5.99900; 
    
    y[0] = 60.393235; y[1] = 17.136244; y[2] = 9.926733; y[3] = 6.958099; y[4] = 5.338835; 
    y[5] = 4.319289; y[6] = 3.618341; y[7] = 3.106830; y[8] = 2.717099; y[9] = 2.410281; 
    y[10] = 2.162459; y[11] = 1.958105; y[12] = 1.786704; y[13] = 1.640877; y[14] = 1.515296; 
    y[15] = 1.406017; y[16] = 1.310056; y[17] = 1.225118; y[18] = 1.149404; y[19] = 1.081488; 
    y[20] = 1.020223; y[21] = 0.825310; y[22] = 0.685193; y[23] = 0.579563; y[24] = 0.497037; 
    y[25] = 0.430742; y[26] = 0.381284; y[27] = 0.261738; y[28] = 0.183443; y[29] = 0.127637; 
    y[30] = 0.085328; y[31] = 0.051653; y[32] = 0.023738; y[33] = -0.000239; y[34] = -0.021508; 
    y[35] = -0.040944; y[36] = -0.059207; y[37] = -0.076828; y[38] = -0.094260; y[39] = -0.111920; 
    y[40] = -0.130224; y[41] = -0.149611; y[42] = -0.170582; y[43] = -0.193741; y[44] = -0.219850; 
    y[45] = -0.249921; y[46] = -0.285345; y[47] = -0.328130; y[48] = -0.381300; y[49] = -0.449673; 
    y[50] = -0.541438; y[51] = -0.671781; y[52] = -0.872433; y[53] = -1.067527; y[54] = -1.206844; 
    y[55] = -1.385316; y[56] = -1.622207; y[57] = -1.951889; y[58] = -2.442269; y[59] = -3.248876; 
    y[60] = -3.538948; y[61] = -3.884793; y[62] = -4.304211; y[63] = -4.823480; y[64] = -5.483079; 
    y[65] = -6.348788; y[66] = -7.535114; y[67] = -9.260658; y[68] = -12.001204; y[69] = -17.025502; 
    y[70] = -29.227314; y[71] = -102.437985; 
    
    w_qsq.push_back(x);
    w_w.push_back(y);
    
    //NR::spline(x,y, dy_left, dy_right, ddy)
    NR::Vec_DP ddy(72);
    NR::spline(x, y,  -2.8753e4, -4.8664e4   , ddy);
    //NR::spline(x, y, 1.0e31, 1.0e31, ddy);

    w_ddw.push_back(ddy);
  }
};



double LuescherW00::operator()(double qsq){
  //check for very close to integer - give small shift
  //  if(qsq % 1.0 < 1e-4){qsq = qsq + 1e-4;}
  //  if( (1.0 - (qsq % 1.0) ) < 1e-4  ){ qsq = qsq - 1e-4;}
  
  //find the integer region
  int region = -1;
  int i = 0;
  while(region < 0){
    if( (qsq <= i + 1) && (qsq > i) ){region = i;}
    i++;
    if(region > 6){cerr << "W00 only coded up to qsq = 6" << endl; exit(1);}
  }
  
  NR::DP inter;
  NR::splint(w_qsq[region], w_w[region], w_ddw[region], qsq, inter);  
  
  double tmp = inter;
  return tmp;

}

double LuescherW40::operator()(double qsq){
  //check for very close to integer - give small shift
  //  if(qsq % 1.0 < 1e-4){qsq = qsq + 1e-4;}
  //  if( (1.0 - (qsq % 1.0) ) < 1e-4  ){ qsq = qsq - 1e-4;}
  
  //find the integer region
  int region = -1;
  int i = 0;
  while(region < 0){
    if( (qsq <= i + 1) && (qsq > i) ){region = i;}
    i++;
    if(region > 6){cerr << "W40 only coded up to qsq = 6" << endl; exit(1);}
  }
  
  NR::DP inter;
  NR::splint(w_qsq[region], w_w[region], w_ddw[region], qsq, inter);  
  
  double tmp = inter;
  return tmp;

}

double LuescherW60::operator()(double qsq){
  //check for very close to integer - give small shift
  //  if(qsq % 1.0 < 1e-4){qsq = qsq + 1e-4;}
  //  if( (1.0 - (qsq % 1.0) ) < 1e-4  ){ qsq = qsq - 1e-4;}
  
  //find the integer region
  int region = -1;
  int i = 0;
  while(region < 0){
    if( (qsq <= i + 1) && (qsq > i) ){region = i;}
    i++;
    if(region > 6){cerr << "W60 only coded up to qsq = 6" << endl; exit(1);}
  }
  
  NR::DP inter;
  NR::splint(w_qsq[region], w_w[region], w_ddw[region], qsq, inter);  
  
  double tmp = inter;
  return tmp;

}

double LuescherW80::operator()(double qsq){
  //check for very close to integer - give small shift
  //  if(qsq % 1.0 < 1e-4){qsq = qsq + 1e-4;}
  //  if( (1.0 - (qsq % 1.0) ) < 1e-4  ){ qsq = qsq - 1e-4;}
  
  //find the integer region
  int region = -1;
  int i = 0;
  while(region < 0){
    if( (qsq <= i + 1) && (qsq > i) ){region = i;}
    i++;
    if(region > 6){cerr << "W80 only coded up to qsq = 6" << endl; exit(1);}
  }
  
  NR::DP inter;
  NR::splint(w_qsq[region], w_w[region], w_ddw[region], qsq, inter);  
  
  double tmp = inter;
  return tmp;

}





/*LuescherPhi::LuescherPhi(){

  // Luescher Phi Function
  {
    NR::Vec_DP tmp_x(90);
    for(int i=0; i < 90; i++){tmp_x[i] = 0.1*(i+1);}
    phi_data_qsq = tmp_x;

    NR::Vec_DP tmp_y(90);
    tmp_y[0] = 1.11;    tmp_y[1] = 1.1352;  tmp_y[2] = 1.1091;  tmp_y[3] = 1.0779;  tmp_y[4] = 1.0503;
    tmp_y[5] = 1.0283;  tmp_y[6] = 1.0121;  tmp_y[7] = 1.0021;  tmp_y[8] = 0.9981;  tmp_y[9] = 1.0000;
    tmp_y[10] = 1.0071; tmp_y[11] = 1.0178; tmp_y[12] = 1.0292; tmp_y[13] = 1.0382; tmp_y[14] = 1.0422;
    tmp_y[15] = 1.0408; tmp_y[16] = 1.0345; tmp_y[17] = 1.0247; tmp_y[18] = 1.0128; tmp_y[19] = 1.0000;
    tmp_y[20] = 0.9872; tmp_y[21] = 0.9751; tmp_y[22] = 0.9645; tmp_y[23] = 0.9563; tmp_y[24] = 0.9512;
    tmp_y[25] = 0.9508; tmp_y[26] = 0.9564; tmp_y[27] = 0.9686; tmp_y[28] = 0.9852; tmp_y[29] = 1.0000;
    tmp_y[30] = 1.0083; tmp_y[31] = 1.0098; tmp_y[32] = 1.0063; tmp_y[33] = 1.0000; tmp_y[34] = 0.9924; 
    tmp_y[35] = 0.9850; tmp_y[36] = 0.9791; tmp_y[37] = 0.9766; tmp_y[38] = 0.9814; tmp_y[39] = 1.0000; 
    tmp_y[40] = 1.0318; tmp_y[41] = 1.0540; tmp_y[42] = 1.0594; tmp_y[43] = 1.0558; tmp_y[44] = 1.0481; 
    tmp_y[45] = 1.0387; tmp_y[46] = 1.0286; tmp_y[47] = 1.0185; tmp_y[48] = 1.0088; tmp_y[49] = 1.0000; 
    tmp_y[50] = 0.9924; tmp_y[51] = 0.9867; tmp_y[52] = 0.9838; tmp_y[53] = 0.9847; tmp_y[54] = 0.9902; 
    tmp_y[55] = 0.9985; tmp_y[56] = 1.0050; tmp_y[57] = 1.0071; tmp_y[58] = 1.0050; tmp_y[59] = 1.0000; 
    tmp_y[60] = 0.9933; tmp_y[61] = 0.9856; tmp_y[62] = 0.9773; tmp_y[63] = 0.9688; tmp_y[64] = 0.9601; 
    tmp_y[65] = 0.9515; tmp_y[66] = 0.9429; tmp_y[67] = 0.9345; tmp_y[68] = 0.9262; tmp_y[69] = 0.9182; 
    tmp_y[70] = 0.9104; tmp_y[71] = 0.9030; tmp_y[72] = 0.8959; tmp_y[73] = 0.8892; tmp_y[74] = 0.8831; 
    tmp_y[75] = 0.8777; tmp_y[76] = 0.8734; tmp_y[77] = 0.8706; tmp_y[78] = 0.8705; tmp_y[79] = 0.8750; 
    tmp_y[80] = 0.8857; tmp_y[81] = 0.8982; tmp_y[82] = 0.9055; tmp_y[83] = 0.9072; tmp_y[84] = 0.9058; 
    tmp_y[85] = 0.9030; tmp_y[86] = 0.8994; tmp_y[87] = 0.8957; tmp_y[88] = 0.8921; tmp_y[89] = 0.8889;
    phi_data_phi = tmp_y;
    phi_data_ddphi = tmp_y;
  }

  NR::spline(phi_data_qsq, phi_data_phi, 0.6625, -0.029, phi_data_ddphi);
  //NR::spline(phi_data_qsq, phi_data_phi, 1.0e33, 1.0e33, phi_data_ddphi);

  // Luescher Sigma Function
  
  NR::Vec_DP tmp_x(512);
tmp_x[0] = 0.01; tmp_x[1] = 0.03; tmp_x[2] = 0.05; tmp_x[3] = 0.07; tmp_x[4] = 0.09; tmp_x[5] = 0.11;
tmp_x[6] = 0.13; tmp_x[7] = 0.15; tmp_x[8] = 0.17; tmp_x[9] = 0.19; tmp_x[10] = 0.21;
tmp_x[11] = 0.23; tmp_x[12] = 0.25; tmp_x[13] = 0.27; tmp_x[14] = 0.29; tmp_x[15] = 0.31;
tmp_x[16] = 0.33; tmp_x[17] = 0.35; tmp_x[18] = 0.37; tmp_x[19] = 0.39; tmp_x[20] = 0.41;
tmp_x[21] = 0.43; tmp_x[22] = 0.45; tmp_x[23] = 0.47; tmp_x[24] = 0.49; tmp_x[25] = 0.51;
tmp_x[26] = 0.53; tmp_x[27] = 0.55; tmp_x[28] = 0.57; tmp_x[29] = 0.59; tmp_x[30] = 0.61;
tmp_x[31] = 0.63; tmp_x[32] = 0.65; tmp_x[33] = 0.67; tmp_x[34] = 0.69; tmp_x[35] = 0.71;
tmp_x[36] = 0.73; tmp_x[37] = 0.75; tmp_x[38] = 0.77; tmp_x[39] = 0.79; tmp_x[40] = 0.81;
tmp_x[41] = 0.83; tmp_x[42] = 0.85; tmp_x[43] = 0.87; tmp_x[44] = 0.89; tmp_x[45] = 0.91;
tmp_x[46] = 0.93; tmp_x[47] = 0.95; tmp_x[48] = 0.97; tmp_x[49] = 0.99; tmp_x[50] = 1.01;
tmp_x[51] = 1.03; tmp_x[52] = 1.05; tmp_x[53] = 1.07; tmp_x[54] = 1.09; tmp_x[55] = 1.11;
tmp_x[56] = 1.13; tmp_x[57] = 1.15; tmp_x[58] = 1.17; tmp_x[59] = 1.19; tmp_x[60] = 1.21;
tmp_x[61] = 1.23; tmp_x[62] = 1.25; tmp_x[63] = 1.27; tmp_x[64] = 1.29; tmp_x[65] = 1.31;
tmp_x[66] = 1.33; tmp_x[67] = 1.35; tmp_x[68] = 1.37; tmp_x[69] = 1.39; tmp_x[70] = 1.41;
tmp_x[71] = 1.43; tmp_x[72] = 1.45; tmp_x[73] = 1.47; tmp_x[74] = 1.49; tmp_x[75] = 1.51;
tmp_x[76] = 1.53; tmp_x[77] = 1.55; tmp_x[78] = 1.57; tmp_x[79] = 1.59; tmp_x[80] = 1.61;
tmp_x[81] = 1.63; tmp_x[82] = 1.65; tmp_x[83] = 1.67; tmp_x[84] = 1.69; tmp_x[85] = 1.71;
tmp_x[86] = 1.73; tmp_x[87] = 1.75; tmp_x[88] = 1.77; tmp_x[89] = 1.79; tmp_x[90] = 1.81;
tmp_x[91] = 1.83; tmp_x[92] = 1.85; tmp_x[93] = 1.87; tmp_x[94] = 1.89; tmp_x[95] = 1.91;
tmp_x[96] = 1.93; tmp_x[97] = 1.95; tmp_x[98] = 1.97; tmp_x[99] = 1.99; tmp_x[100] = 2.01;
tmp_x[101] = 2.03; tmp_x[102] = 2.05; tmp_x[103] = 2.07; tmp_x[104] = 2.09; tmp_x[105] = 2.11;
tmp_x[106] = 2.13; tmp_x[107] = 2.15; tmp_x[108] = 2.17; tmp_x[109] = 2.19; tmp_x[110] = 2.21;
tmp_x[111] = 2.23; tmp_x[112] = 2.25; tmp_x[113] = 2.27; tmp_x[114] = 2.29; tmp_x[115] = 2.31;
tmp_x[116] = 2.33; tmp_x[117] = 2.35; tmp_x[118] = 2.37; tmp_x[119] = 2.39; tmp_x[120] = 2.41;
tmp_x[121] = 2.43; tmp_x[122] = 2.45; tmp_x[123] = 2.47; tmp_x[124] = 2.49; tmp_x[125] = 2.51;
tmp_x[126] = 2.53; tmp_x[127] = 2.55; tmp_x[128] = 2.57; tmp_x[129] = 2.59; tmp_x[130] = 2.61;
tmp_x[131] = 2.63; tmp_x[132] = 2.65; tmp_x[133] = 2.67; tmp_x[134] = 2.69; tmp_x[135] = 2.71;
tmp_x[136] = 2.73; tmp_x[137] = 2.75; tmp_x[138] = 2.77; tmp_x[139] = 2.79; tmp_x[140] = 2.81;
tmp_x[141] = 2.83; tmp_x[142] = 2.85; tmp_x[143] = 2.87; tmp_x[144] = 2.89; tmp_x[145] = 2.91;
tmp_x[146] = 2.93; tmp_x[147] = 2.95; tmp_x[148] = 2.97; tmp_x[149] = 2.99; tmp_x[150] = 3.01;
tmp_x[151] = 3.03; tmp_x[152] = 3.05; tmp_x[153] = 3.07; tmp_x[154] = 3.09; tmp_x[155] = 3.11;
tmp_x[156] = 3.13; tmp_x[157] = 3.15; tmp_x[158] = 3.17; tmp_x[159] = 3.19; tmp_x[160] = 3.21;
tmp_x[161] = 3.23; tmp_x[162] = 3.25; tmp_x[163] = 3.27; tmp_x[164] = 3.29; tmp_x[165] = 3.31;
tmp_x[166] = 3.33; tmp_x[167] = 3.35; tmp_x[168] = 3.37; tmp_x[169] = 3.39; tmp_x[170] = 3.41;
tmp_x[171] = 3.43; tmp_x[172] = 3.45; tmp_x[173] = 3.47; tmp_x[174] = 3.49; tmp_x[175] = 3.51;
tmp_x[176] = 3.53; tmp_x[177] = 3.55; tmp_x[178] = 3.57; tmp_x[179] = 3.59; tmp_x[180] = 3.61;
tmp_x[181] = 3.63; tmp_x[182] = 3.65; tmp_x[183] = 3.67; tmp_x[184] = 3.69; tmp_x[185] = 3.71;
tmp_x[186] = 3.73; tmp_x[187] = 3.75; tmp_x[188] = 3.77; tmp_x[189] = 3.79; tmp_x[190] = 3.81;
tmp_x[191] = 3.83; tmp_x[192] = 3.85; tmp_x[193] = 3.87; tmp_x[194] = 3.89; tmp_x[195] = 3.91;
tmp_x[196] = 3.93; tmp_x[197] = 3.95; tmp_x[198] = 3.97; tmp_x[199] = 3.99; tmp_x[200] = 4.01;
tmp_x[201] = 4.03; tmp_x[202] = 4.05; tmp_x[203] = 4.07; tmp_x[204] = 4.09; tmp_x[205] = 4.11;
tmp_x[206] = 4.13; tmp_x[207] = 4.15; tmp_x[208] = 4.17; tmp_x[209] = 4.19; tmp_x[210] = 4.21;
tmp_x[211] = 4.23; tmp_x[212] = 4.25; tmp_x[213] = 4.27; tmp_x[214] = 4.29; tmp_x[215] = 4.31;
tmp_x[216] = 4.33; tmp_x[217] = 4.35; tmp_x[218] = 4.37; tmp_x[219] = 4.39; tmp_x[220] = 4.41;
tmp_x[221] = 4.43; tmp_x[222] = 4.45; tmp_x[223] = 4.47; tmp_x[224] = 4.49; tmp_x[225] = 4.51;
tmp_x[226] = 4.53; tmp_x[227] = 4.55; tmp_x[228] = 4.57; tmp_x[229] = 4.59; tmp_x[230] = 4.61;
tmp_x[231] = 4.63; tmp_x[232] = 4.65; tmp_x[233] = 4.67; tmp_x[234] = 4.69; tmp_x[235] = 4.71;
tmp_x[236] = 4.73; tmp_x[237] = 4.75; tmp_x[238] = 4.77; tmp_x[239] = 4.79; tmp_x[240] = 4.81;
tmp_x[241] = 4.83; tmp_x[242] = 4.85; tmp_x[243] = 4.87; tmp_x[244] = 4.89; tmp_x[245] = 4.91;
tmp_x[246] = 4.93; tmp_x[247] = 4.95; tmp_x[248] = 4.97; tmp_x[249] = 4.99; tmp_x[250] = 5.01;
tmp_x[251] = 5.03; tmp_x[252] = 5.05; tmp_x[253] = 5.07; tmp_x[254] = 5.09; tmp_x[255] = 5.11;
tmp_x[256] = 5.13; tmp_x[257] = 5.15; tmp_x[258] = 5.17; tmp_x[259] = 5.19; tmp_x[260] = 5.21;
tmp_x[261] = 5.23; tmp_x[262] = 5.25; tmp_x[263] = 5.27; tmp_x[264] = 5.29; tmp_x[265] = 5.31;
tmp_x[266] = 5.33; tmp_x[267] = 5.35; tmp_x[268] = 5.37; tmp_x[269] = 5.39; tmp_x[270] = 5.41;
tmp_x[271] = 5.43; tmp_x[272] = 5.45; tmp_x[273] = 5.47; tmp_x[274] = 5.49; tmp_x[275] = 5.51;
tmp_x[276] = 5.53; tmp_x[277] = 5.55; tmp_x[278] = 5.57; tmp_x[279] = 5.59; tmp_x[280] = 5.61;
tmp_x[281] = 5.63; tmp_x[282] = 5.65; tmp_x[283] = 5.67; tmp_x[284] = 5.69; tmp_x[285] = 5.71;
tmp_x[286] = 5.73; tmp_x[287] = 5.75; tmp_x[288] = 5.77; tmp_x[289] = 5.79; tmp_x[290] = 5.81;
tmp_x[291] = 5.83; tmp_x[292] = 5.85; tmp_x[293] = 5.87; tmp_x[294] = 5.89; tmp_x[295] = 5.91;
tmp_x[296] = 5.93; tmp_x[297] = 5.95; tmp_x[298] = 5.97; tmp_x[299] = 5.99; tmp_x[300] = 6.01;
tmp_x[301] = 6.03; tmp_x[302] = 6.05; tmp_x[303] = 6.07; tmp_x[304] = 6.09; tmp_x[305] = 6.11;
tmp_x[306] = 6.13; tmp_x[307] = 6.15; tmp_x[308] = 6.17; tmp_x[309] = 6.19; tmp_x[310] = 6.21;
tmp_x[311] = 6.23; tmp_x[312] = 6.25; tmp_x[313] = 6.27; tmp_x[314] = 6.29; tmp_x[315] = 6.31;
tmp_x[316] = 6.33; tmp_x[317] = 6.35; tmp_x[318] = 6.37; tmp_x[319] = 6.39; tmp_x[320] = 6.41;
tmp_x[321] = 6.43; tmp_x[322] = 6.45; tmp_x[323] = 6.47; tmp_x[324] = 6.49; tmp_x[325] = 6.51;
tmp_x[326] = 6.53; tmp_x[327] = 6.55; tmp_x[328] = 6.57; tmp_x[329] = 6.59; tmp_x[330] = 6.61;
tmp_x[331] = 6.63; tmp_x[332] = 6.65; tmp_x[333] = 6.67; tmp_x[334] = 6.69; tmp_x[335] = 6.71;
tmp_x[336] = 6.73; tmp_x[337] = 6.75; tmp_x[338] = 6.77; tmp_x[339] = 6.79; tmp_x[340] = 6.81;
tmp_x[341] = 6.83; tmp_x[342] = 6.85; tmp_x[343] = 6.87; tmp_x[344] = 6.89; tmp_x[345] = 6.91;
tmp_x[346] = 6.93; tmp_x[347] = 6.95; tmp_x[348] = 6.97; tmp_x[349] = 6.99; tmp_x[350] = 7.01;
tmp_x[351] = 7.03; tmp_x[352] = 7.05; tmp_x[353] = 7.07; tmp_x[354] = 7.09; tmp_x[355] = 7.11;
tmp_x[356] = 7.13; tmp_x[357] = 7.15; tmp_x[358] = 7.17; tmp_x[359] = 7.19; tmp_x[360] = 7.21;
tmp_x[361] = 7.23; tmp_x[362] = 7.25; tmp_x[363] = 7.27; tmp_x[364] = 7.29; tmp_x[365] = 7.31;
tmp_x[366] = 7.33; tmp_x[367] = 7.35; tmp_x[368] = 7.37; tmp_x[369] = 7.39; tmp_x[370] = 7.41;
tmp_x[371] = 7.43; tmp_x[372] = 7.45; tmp_x[373] = 7.47; tmp_x[374] = 7.49; tmp_x[375] = 7.51;
tmp_x[376] = 7.53; tmp_x[377] = 7.55; tmp_x[378] = 7.57; tmp_x[379] = 7.59; tmp_x[380] = 7.61;
tmp_x[381] = 7.63; tmp_x[382] = 7.65; tmp_x[383] = 7.67; tmp_x[384] = 7.69; tmp_x[385] = 7.71;
tmp_x[386] = 7.73; tmp_x[387] = 7.75; tmp_x[388] = 7.77; tmp_x[389] = 7.79; tmp_x[390] = 7.81;
tmp_x[391] = 7.83; tmp_x[392] = 7.85; tmp_x[393] = 7.87; tmp_x[394] = 7.89; tmp_x[395] = 7.91;
tmp_x[396] = 7.93; tmp_x[397] = 7.95; tmp_x[398] = 7.97; tmp_x[399] = 7.99; tmp_x[400] = 8.01;
tmp_x[401] = 8.03; tmp_x[402] = 8.05; tmp_x[403] = 8.07; tmp_x[404] = 8.09; tmp_x[405] = 8.11;
tmp_x[406] = 8.13; tmp_x[407] = 8.15; tmp_x[408] = 8.17; tmp_x[409] = 8.19; tmp_x[410] = 8.21;
tmp_x[411] = 8.23; tmp_x[412] = 8.25; tmp_x[413] = 8.27; tmp_x[414] = 8.29; tmp_x[415] = 8.31;
tmp_x[416] = 8.33; tmp_x[417] = 8.35; tmp_x[418] = 8.37; tmp_x[419] = 8.39; tmp_x[420] = 8.41;
tmp_x[421] = 8.43; tmp_x[422] = 8.45; tmp_x[423] = 8.47; tmp_x[424] = 8.49; tmp_x[425] = 8.51;
tmp_x[426] = 8.53; tmp_x[427] = 8.55; tmp_x[428] = 8.57; tmp_x[429] = 8.59; tmp_x[430] = 8.61;
tmp_x[431] = 8.63; tmp_x[432] = 8.65; tmp_x[433] = 8.67; tmp_x[434] = 8.69; tmp_x[435] = 8.71;
tmp_x[436] = 8.73; tmp_x[437] = 8.75; tmp_x[438] = 8.77; tmp_x[439] = 8.79; tmp_x[440] = 8.81;
tmp_x[441] = 8.83; tmp_x[442] = 8.85; tmp_x[443] = 8.87; tmp_x[444] = 8.89; tmp_x[445] = 8.91;
tmp_x[446] = 8.93; tmp_x[447] = 8.95; tmp_x[448] = 8.97; tmp_x[449] = 8.99; tmp_x[450] = 9.01;
tmp_x[451] = 9.03; tmp_x[452] = 9.05; tmp_x[453] = 9.07; tmp_x[454] = 9.09; tmp_x[455] = 9.11;
tmp_x[456] = 9.13; tmp_x[457] = 9.15; tmp_x[458] = 9.17; tmp_x[459] = 9.19; tmp_x[460] = 9.21;
tmp_x[461] = 9.23; tmp_x[462] = 9.25; tmp_x[463] = 9.27; tmp_x[464] = 9.29; tmp_x[465] = 9.31;
tmp_x[466] = 9.33; tmp_x[467] = 9.35; tmp_x[468] = 9.37; tmp_x[469] = 9.39; tmp_x[470] = 9.41;
tmp_x[471] = 9.43; tmp_x[472] = 9.45; tmp_x[473] = 9.47; tmp_x[474] = 9.49; tmp_x[475] = 9.51;
tmp_x[476] = 9.53; tmp_x[477] = 9.55; tmp_x[478] = 9.57; tmp_x[479] = 9.59; tmp_x[480] = 9.61;
tmp_x[481] = 9.63; tmp_x[482] = 9.65; tmp_x[483] = 9.67; tmp_x[484] = 9.69; tmp_x[485] = 9.71;
tmp_x[486] = 9.73; tmp_x[487] = 9.75; tmp_x[488] = 9.77; tmp_x[489] = 9.79; tmp_x[490] = 9.81;
tmp_x[491] = 9.83; tmp_x[492] = 9.85; tmp_x[493] = 9.87; tmp_x[494] = 9.89; tmp_x[495] = 9.91;
tmp_x[496] = 9.93; tmp_x[497] = 9.95; tmp_x[498] = 9.97; tmp_x[499] = 9.99; tmp_x[500] = 10.01;
tmp_x[501] = 10.03; tmp_x[502] = 10.05; tmp_x[503] = 10.07; tmp_x[504] = 10.09; tmp_x[505] = 10.11;
tmp_x[506] = 10.13; tmp_x[507] = 10.15; tmp_x[508] = 10.17; tmp_x[509] = 10.19; tmp_x[510] = 10.21;
tmp_x[511] = 10.23;  


  NR::Vec_DP tmp_y(512);
tmp_y[0] = 59310.3; tmp_y[1] = 5456.78; tmp_y[2] = 1700.32; tmp_y[3] = 773.958; tmp_y[4] = 427.019; tmp_y[5] = 265.134;
tmp_y[6] = 178.419; tmp_y[7] = 127.319; tmp_y[8] = 95.0152; tmp_y[9] = 73.4625; tmp_y[10] = 58.454;
tmp_y[11] = 47.6328; tmp_y[12] = 39.6026; tmp_y[13] = 33.4972; tmp_y[14] = 28.7584; tmp_y[15] = 25.0142;
tmp_y[16] = 22.0098; tmp_y[17] = 19.5661; tmp_y[18] = 17.5548; tmp_y[19] = 15.8818; tmp_y[20] = 14.4772;
tmp_y[21] = 13.2881; tmp_y[22] = 12.274; tmp_y[23] = 11.4034; tmp_y[24] = 10.6517; tmp_y[25] = 9.99914;
tmp_y[26] = 9.43014; tmp_y[27] = 8.93197; tmp_y[28] = 8.49426; tmp_y[29] = 8.10849; tmp_y[30] = 7.76761;
tmp_y[31] = 7.46573; tmp_y[32] = 7.19791; tmp_y[33] = 6.95994; tmp_y[34] = 6.74825; tmp_y[35] = 6.55977;
tmp_y[36] = 6.39185; tmp_y[37] = 6.24215; tmp_y[38] = 6.10862; tmp_y[39] = 5.98943; tmp_y[40] = 5.88295;
tmp_y[41] = 5.78765; tmp_y[42] = 5.70216; tmp_y[43] = 5.62518; tmp_y[44] = 5.55546; tmp_y[45] = 5.49181;
tmp_y[46] = 5.4331; tmp_y[47] = 5.37816; tmp_y[48] = 5.32588; tmp_y[49] = 5.27514; tmp_y[50] = 5.22482;
tmp_y[51] = 5.1738; tmp_y[52] = 5.12098; tmp_y[53] = 5.06527; tmp_y[54] = 5.00564; tmp_y[55] = 4.94109;
tmp_y[56] = 4.87071; tmp_y[57] = 4.79368; tmp_y[58] = 4.70934; tmp_y[59] = 4.61714; tmp_y[60] = 4.51676;
tmp_y[61] = 4.40804; tmp_y[62] = 4.29106; tmp_y[63] = 4.16609; tmp_y[64] = 4.03364; tmp_y[65] = 3.8944;
tmp_y[66] = 3.74923; tmp_y[67] = 3.59916; tmp_y[68] = 3.44529; tmp_y[69] = 3.28882; tmp_y[70] = 3.13093;
tmp_y[71] = 2.97282; tmp_y[72] = 2.81562; tmp_y[73] = 2.66037; tmp_y[74] = 2.50802; tmp_y[75] = 2.35939;
tmp_y[76] = 2.21518; tmp_y[77] = 2.07594; tmp_y[78] = 1.9421; tmp_y[79] = 1.81399; tmp_y[80] = 1.6918;
tmp_y[81] = 1.57563; tmp_y[82] = 1.4655; tmp_y[83] = 1.36136; tmp_y[84] = 1.2631; tmp_y[85] = 1.17056;
tmp_y[86] = 1.08354; tmp_y[87] = 1.00182; tmp_y[88] = 0.925161; tmp_y[89] = 0.853315; tmp_y[90] = 0.786026;
tmp_y[91] = 0.723038; tmp_y[92] = 0.6641; tmp_y[93] = 0.608968; tmp_y[94] = 0.557404; tmp_y[95] = 0.509183;
tmp_y[96] = 0.464091; tmp_y[97] = 0.421927; tmp_y[98] = 0.382503; tmp_y[99] = 0.345644; tmp_y[100] = 0.311188;
tmp_y[101] = 0.278989; tmp_y[102] = 0.248912; tmp_y[103] = 0.220835; tmp_y[104] = 0.194653; tmp_y[105] = 0.17027;
tmp_y[106] = 0.147607; tmp_y[107] = 0.126596; tmp_y[108] = 0.107184; tmp_y[109] = 0.0893321; tmp_y[110] = 0.0730164;
tmp_y[111] = 0.0582283; tmp_y[112] = 0.0449759; tmp_y[113] = 0.0332851; tmp_y[114] = 0.023201; tmp_y[115] = 0.01479;
tmp_y[116] = 0.00814202; tmp_y[117] = 0.00337268; tmp_y[118] = 0.000626681; tmp_y[119] = 0.0000810269; tmp_y[120] = 0.00194894;
tmp_y[121] = 0.0064841; tmp_y[122] = 0.0139853; tmp_y[123] = 0.024801; tmp_y[124] = 0.0393345; tmp_y[125] = 0.058048;
tmp_y[126] = 0.0814662; tmp_y[127] = 0.110178; tmp_y[128] = 0.144834; tmp_y[129] = 0.186144; tmp_y[130] = 0.234863;
tmp_y[131] = 0.291767; tmp_y[132] = 0.357629; tmp_y[133] = 0.433165; tmp_y[134] = 0.518975; tmp_y[135] = 0.615459;
tmp_y[136] = 0.722727; tmp_y[137] = 0.840486; tmp_y[138] = 0.96794; tmp_y[139] = 1.1037; tmp_y[140] = 1.24575;
tmp_y[141] = 1.39145; tmp_y[142] = 1.53764; tmp_y[143] = 1.68084; tmp_y[144] = 1.81746; tmp_y[145] = 1.94417;
tmp_y[146] = 2.05811; tmp_y[147] = 2.15714; tmp_y[148] = 2.24; tmp_y[149] = 2.3063; tmp_y[150] = 2.35643;
tmp_y[151] = 2.39146; tmp_y[152] = 2.41291; tmp_y[153] = 2.42259; tmp_y[154] = 2.42242; tmp_y[155] = 2.41429;
tmp_y[156] = 2.40001; tmp_y[157] = 2.38119; tmp_y[158] = 2.35927; tmp_y[159] = 2.33546; tmp_y[160] = 2.31081;
tmp_y[161] = 2.28616; tmp_y[162] = 2.26223; tmp_y[163] = 2.23958; tmp_y[164] = 2.21869; tmp_y[165] = 2.19993;
tmp_y[166] = 2.18363; tmp_y[167] = 2.17004; tmp_y[168] = 2.15939; tmp_y[169] = 2.15188; tmp_y[170] = 2.14771;
tmp_y[171] = 2.14705; tmp_y[172] = 2.1501; tmp_y[173] = 2.15705; tmp_y[174] = 2.16814; tmp_y[175] = 2.1836;
tmp_y[176] = 2.20372; tmp_y[177] = 2.22881; tmp_y[178] = 2.25926; tmp_y[179] = 2.29547; tmp_y[180] = 2.33796;
tmp_y[181] = 2.38728; tmp_y[182] = 2.4441; tmp_y[183] = 2.50916; tmp_y[184] = 2.58335; tmp_y[185] = 2.66763;
tmp_y[186] = 2.76314; tmp_y[187] = 2.87112; tmp_y[188] = 2.99291; tmp_y[189] = 3.12998; tmp_y[190] = 3.28376;
tmp_y[191] = 3.45556; tmp_y[192] = 3.64632; tmp_y[193] = 3.85619; tmp_y[194] = 4.08389; tmp_y[195] = 4.32574;
tmp_y[196] = 4.57437; tmp_y[197] = 4.81702; tmp_y[198] = 5.034; tmp_y[199] = 5.19804; tmp_y[200] = 5.27616;
tmp_y[201] = 5.23549; tmp_y[202] = 5.05322; tmp_y[203] = 4.72708; tmp_y[204] = 4.28035; tmp_y[205] = 3.75662;
tmp_y[206] = 3.20668; tmp_y[207] = 2.67482; tmp_y[208] = 2.19106; tmp_y[209] = 1.77033; tmp_y[210] = 1.41586;
tmp_y[211] = 1.12368; tmp_y[212] = 0.886314; tmp_y[213] = 0.695304; tmp_y[214] = 0.542517; tmp_y[215] = 0.42077;
tmp_y[216] = 0.324015; tmp_y[217] = 0.247293; tmp_y[218] = 0.186611; tmp_y[219] = 0.138777; tmp_y[220] = 0.101258;
tmp_y[221] = 0.0720436; tmp_y[222] = 0.0495411; tmp_y[223] = 0.0324863; tmp_y[224] = 0.0198741; tmp_y[225] = 0.0109037;
tmp_y[226] = 0.00493572; tmp_y[227] = 0.001459; tmp_y[228] = 0.0000639909; tmp_y[229] = 0.00042257; tmp_y[230] = 0.00227197;
tmp_y[231] = 0.00540223; tmp_y[232] = 0.00964629; tmp_y[233] = 0.0148722; tmp_y[234] = 0.0209772; tmp_y[235] = 0.0278823;
tmp_y[236] = 0.0355293; tmp_y[237] = 0.0438771; tmp_y[238] = 0.0528996; tmp_y[239] = 0.0625841; tmp_y[240] = 0.0729295;
tmp_y[241] = 0.0839456; tmp_y[242] = 0.0956523; tmp_y[243] = 0.108079; tmp_y[244] = 0.121265; tmp_y[245] = 0.135258;
tmp_y[246] = 0.150116; tmp_y[247] = 0.165907; tmp_y[248] = 0.182708; tmp_y[249] = 0.200608; tmp_y[250] = 0.219705;
tmp_y[251] = 0.240112; tmp_y[252] = 0.261953; tmp_y[253] = 0.285365; tmp_y[254] = 0.310498; tmp_y[255] = 0.337519;
tmp_y[256] = 0.366606; tmp_y[257] = 0.397951; tmp_y[258] = 0.431757; tmp_y[259] = 0.468236; tmp_y[260] = 0.507602;
tmp_y[261] = 0.550065; tmp_y[262] = 0.595818; tmp_y[263] = 0.645023; tmp_y[264] = 0.697784; tmp_y[265] = 0.754125;
tmp_y[266] = 0.813945; tmp_y[267] = 0.876976; tmp_y[268] = 0.942725; tmp_y[269] = 1.01042; tmp_y[270] = 1.07894;
tmp_y[271] = 1.14681; tmp_y[272] = 1.21213; tmp_y[273] = 1.27266; tmp_y[274] = 1.32592; tmp_y[275] = 1.36934;
tmp_y[276] = 1.40052; tmp_y[277] = 1.41754; tmp_y[278] = 1.41919; tmp_y[279] = 1.40518; tmp_y[280] = 1.37616;
tmp_y[281] = 1.3337; tmp_y[282] = 1.28002; tmp_y[283] = 1.21772; tmp_y[284] = 1.1495; tmp_y[285] = 1.07791;
tmp_y[286] = 1.00519; tmp_y[287] = 0.933165; tmp_y[288] = 0.863219; tmp_y[289] = 0.796345; tmp_y[290] = 0.733186;
tmp_y[291] = 0.674098; tmp_y[292] = 0.619226; tmp_y[293] = 0.568551; tmp_y[294] = 0.521948; tmp_y[295] = 0.479219;
tmp_y[296] = 0.440123; tmp_y[297] = 0.404401; tmp_y[298] = 0.371787; tmp_y[299] = 0.34202; tmp_y[300] = 0.314849;
tmp_y[301] = 0.290038; tmp_y[302] = 0.26737; tmp_y[303] = 0.246643; tmp_y[304] = 0.227674; tmp_y[305] = 0.210297;
tmp_y[306] = 0.19436; tmp_y[307] = 0.179729; tmp_y[308] = 0.166279; tmp_y[309] = 0.153902; tmp_y[310] = 0.142499;
tmp_y[311] = 0.13198; tmp_y[312] = 0.122266; tmp_y[313] = 0.113285; tmp_y[314] = 0.104973; tmp_y[315] = 0.097271;
tmp_y[316] = 0.0901271; tmp_y[317] = 0.0834944; tmp_y[318] = 0.0773304; tmp_y[319] = 0.0715966; tmp_y[320] = 0.0662584;
tmp_y[321] = 0.0612846; tmp_y[322] = 0.0566467; tmp_y[323] = 0.052319; tmp_y[324] = 0.0482783; tmp_y[325] = 0.0445033;
tmp_y[326] = 0.0409749; tmp_y[327] = 0.0376755; tmp_y[328] = 0.0345893; tmp_y[329] = 0.0317017; tmp_y[330] = 0.0289996;
tmp_y[331] = 0.0264709; tmp_y[332] = 0.0241048; tmp_y[333] = 0.0218912; tmp_y[334] = 0.0198212; tmp_y[335] = 0.0178863;
tmp_y[336] = 0.0160791; tmp_y[337] = 0.0143928; tmp_y[338] = 0.0128212; tmp_y[339] = 0.0113586; tmp_y[340] = 0.0100001;
tmp_y[341] = 0.00874101; tmp_y[342] = 0.00757737; tmp_y[343] = 0.00650552; tmp_y[344] = 0.0055223; tmp_y[345] = 0.00462493;
tmp_y[346] = 0.00381103; tmp_y[347] = 0.00307859; tmp_y[348] = 0.00242598; tmp_y[349] = 0.00185191; tmp_y[350] = 0.00135548;
tmp_y[351] = 0.00093611; tmp_y[352] = 0.000593595; tmp_y[353] = 0.000328083; tmp_y[354] = 0.000140095; tmp_y[355] = 0.0000305304;
tmp_y[356] = 6.84068e-7; tmp_y[357] = 0.0000522659; tmp_y[358] = 0.000187424; tmp_y[359] = 0.000408772; tmp_y[360] = 0.000719426;
tmp_y[361] = 0.00112304; tmp_y[362] = 0.00162386; tmp_y[363] = 0.00222676; tmp_y[364] = 0.00293733; tmp_y[365] = 0.00376195;
tmp_y[366] = 0.00470782; tmp_y[367] = 0.00578315; tmp_y[368] = 0.00699718; tmp_y[369] = 0.00836039; tmp_y[370] = 0.0098846;
tmp_y[371] = 0.0115832; tmp_y[372] = 0.0134712; tmp_y[373] = 0.0155657; tmp_y[374] = 0.0178862; tmp_y[375] = 0.0204544;
tmp_y[376] = 0.0232952; tmp_y[377] = 0.0264369; tmp_y[378] = 0.0299117; tmp_y[379] = 0.0337561; tmp_y[380] = 0.0380121;
tmp_y[381] = 0.0427273; tmp_y[382] = 0.0479563; tmp_y[383] = 0.0537618; tmp_y[384] = 0.0602151; tmp_y[385] = 0.0673982;
tmp_y[386] = 0.0754044; tmp_y[387] = 0.0843402; tmp_y[388] = 0.0943259; tmp_y[389] = 0.105497; tmp_y[390] = 0.118004;
tmp_y[391] = 0.13201; tmp_y[392] = 0.14769; tmp_y[393] = 0.165219; tmp_y[394] = 0.18476; tmp_y[395] = 0.206442;
tmp_y[396] = 0.23032; tmp_y[397] = 0.256327; tmp_y[398] = 0.28419; tmp_y[399] = 0.313346; tmp_y[400] = 0.34283;
tmp_y[401] = 0.371203; tmp_y[402] = 0.396537; tmp_y[403] = 0.416547; tmp_y[404] = 0.428912; tmp_y[405] = 0.431754;
tmp_y[406] = 0.424142; tmp_y[407] = 0.406414; tmp_y[408] = 0.380134; tmp_y[409] = 0.347704; tmp_y[410] = 0.311798;
tmp_y[411] = 0.274866; tmp_y[412] = 0.238824; tmp_y[413] = 0.204974; tmp_y[414] = 0.174059; tmp_y[415] = 0.146394;
tmp_y[416] = 0.122003; tmp_y[417] = 0.10073; tmp_y[418] = 0.0823312; tmp_y[419] = 0.0665231; tmp_y[420] = 0.0530216;
tmp_y[421] = 0.0415602; tmp_y[422] = 0.0318989; tmp_y[423] = 0.0238279; tmp_y[424] = 0.0171677; tmp_y[425] = 0.011767;
tmp_y[426] = 0.00750044; tmp_y[427] = 0.0042654; tmp_y[428] = 0.00197975; tmp_y[429] = 0.000579272; tmp_y[430] = 0.0000155746;
tmp_y[431] = 0.000254397; tmp_y[432] = 0.00127419; tmp_y[433] = 0.00306499; tmp_y[434] = 0.00562762; tmp_y[435] = 0.00897305;
tmp_y[436] = 0.0131221; tmp_y[437] = 0.0181051; tmp_y[438] = 0.0239622; tmp_y[439] = 0.0307432; tmp_y[440] = 0.0385081;
tmp_y[441] = 0.0473277; tmp_y[442] = 0.057284; tmp_y[443] = 0.0684711; tmp_y[444] = 0.0809962; tmp_y[445] = 0.0949806;
tmp_y[446] = 0.110561; tmp_y[447] = 0.127891; tmp_y[448] = 0.147141; tmp_y[449] = 0.168503; tmp_y[450] = 0.192189;
tmp_y[451] = 0.218434; tmp_y[452] = 0.247496; tmp_y[453] = 0.27966; tmp_y[454] = 0.315237; tmp_y[455] = 0.354561;
tmp_y[456] = 0.397994; tmp_y[457] = 0.445919; tmp_y[458] = 0.498739; tmp_y[459] = 0.556865; tmp_y[460] = 0.620714;
tmp_y[461] = 0.690686; tmp_y[462] = 0.767148; tmp_y[463] = 0.850412; tmp_y[464] = 0.940693; tmp_y[465] = 1.03808;
tmp_y[466] = 1.14248; tmp_y[467] = 1.25356; tmp_y[468] = 1.37073; tmp_y[469] = 1.49303; tmp_y[470] = 1.61914;
tmp_y[471] = 1.74734; tmp_y[472] = 1.87553; tmp_y[473] = 2.00127; tmp_y[474] = 2.12185; tmp_y[475] = 2.2345;
tmp_y[476] = 2.3365; tmp_y[477] = 2.42537; tmp_y[478] = 2.49908; tmp_y[479] = 2.55621; tmp_y[480] = 2.59597;
tmp_y[481] = 2.61831; tmp_y[482] = 2.6238; tmp_y[483] = 2.61358; tmp_y[484] = 2.58923; tmp_y[485] = 2.55256;
tmp_y[486] = 2.50553; tmp_y[487] = 2.45011; tmp_y[488] = 2.38816; tmp_y[489] = 2.32139; tmp_y[490] = 2.25129;
tmp_y[491] = 2.17916; tmp_y[492] = 2.10607; tmp_y[493] = 2.03287; tmp_y[494] = 1.96026; tmp_y[495] = 1.88875;
tmp_y[496] = 1.81871; tmp_y[497] = 1.75041; tmp_y[498] = 1.684; tmp_y[499] = 1.61958; tmp_y[500] = 1.55717;
tmp_y[501] = 1.49674; tmp_y[502] = 1.43823; tmp_y[503] = 1.38154; tmp_y[504] = 1.32656; tmp_y[505] = 1.27316;
tmp_y[506] = 1.22119; tmp_y[507] = 1.1705; tmp_y[508] = 1.12093; tmp_y[509] = 1.07232; tmp_y[510] = 1.02451;
tmp_y[511] = 0.97733;

  sigma_data_qsq = tmp_x;
  sigma_data_sigma = tmp_y;
  sigma_data_ddsigma = tmp_y;

  NR::spline(sigma_data_qsq, sigma_data_sigma, -4.73e6, -2.346,  sigma_data_ddsigma);
  //  NR::spline(sigma_data_qsq, sigma_data_sigma, 0.0, -2.346,  sigma_data_ddsigma);

};

double LuescherPhi::phi(double q){
  double tmp;
  double pi = 2.0 * atan2(1.0 , 0.0);

  if(q < 0.319){
    double denom = 1.0 + 8.91363 * pow(q, 2) - 16.5323 * pow(q, 4) - 8.402 * pow(q, 6) - 6.95 * pow(q, 8);
    tmp = atan( 2 * pi * pi * pow(q, 3) / denom );
  }
  else if(q < 3.0){
    NR::DP inter;
    NR::DP qsq = pow(q, 2);
    NR::splint(phi_data_qsq, phi_data_phi, phi_data_ddphi, qsq, inter);
    tmp = pi * pow(q, 2) * inter;
  }
  else{
    cerr << "q-value of " << q << " outside coded range of 0:3.0" << endl;
    exit(1);
  }

  return tmp;
};

string LuescherPhi::type(double q){
  string tmp;
  if(q < 0.319){
    tmp = "arctan";
  }
  else if(q < 3.0){
    tmp = "interpolate";
  }
  else{
    tmp = "out of range";
  }

  return tmp;
};

double LuescherPhi::sigma(double q){
  double tmp;
  double pi = 2.0 * atan2(1.0 , 0.0);

  // ADD EXTRA ROUTINE FOR q^2 < 0.3 where interpolation is poor
  if(q < sqrt(0.3)){
    NR::DP qsq = pow(q, 2);
    tmp = 1.0 / (  0.149767 + 1.92932*qsq - 4.60168*pow(qsq,2) + 4.25058*pow(qsq,3) - 1.76405*pow(qsq,4)    );
    tmp /= pow(qsq,2);
  }
  else if(q < sqrt(10.0)){
    NR::DP inter;
    NR::DP qsq = pow(q, 2);
    NR::splint(sigma_data_qsq, sigma_data_sigma, sigma_data_ddsigma, qsq, inter);
    tmp = inter;
  }
  else{
    cerr << "q-value of " << q <<" outside coded range of 0:3.3" << endl;
    exit(1);
  }
  return tmp;
};

//=======================================================================

// L should be expressed in temporal lattice units, so for a 16^3 attice with anisotropy 3.5,  L = 16*3.5

LuescherPhaseShift::LuescherPhaseShift(double L_, double mA_, double mB_): L(L_), mA(mA_), mB(mB_){
  LuescherPhi tmp; luPhi = tmp;
};

double LuescherPhaseShift::delta(double E, int n){

  double pi = 2.0 * atan2(1.0 , 0.0);
  
  double k = sqrt( pow(E,2) - pow(mA + mB , 2) ) * sqrt( pow(E,2) - pow(mA - mB , 2) ) / (2.0 * E);
  
  return pi * n - luPhi.phi( k * L / (2.0 * pi) );
};

//=======================================================================

LuescherPhaseShiftEnsem::LuescherPhaseShiftEnsem(double L_, EnsemReal mA_, EnsemReal mB_): L(L_), mA(mA_), mB(mB_){
  LuescherPhi tmp; luPhi = tmp;
};

EnsemReal LuescherPhaseShiftEnsem::k(EnsemReal E){
  return sqrt( E*E - (mA + mB)*(mA + mB) ) * sqrt( E*E - (mA - mB)*(mA - mB) ) / (Real(2.0) * E);
};

EnsemReal LuescherPhaseShiftEnsem::delta(EnsemReal E, int n){

  double pi = 2.0 * atan2(1.0 , 0.0);
  
  EnsemReal kk = k(E);
  EnsemReal k_scale = rescaleEnsemDown(kk);
 
  EnsemReal delta = Real(0.0) * k_scale;

  for(int cfg = 0; cfg < kk.size(); cfg++){
    double K = toDouble( peekEnsem(k_scale , cfg) );
    double tmp = pi * n - luPhi.phi( K * L / (2.0 * pi) );
    pokeEnsem(delta, Real(tmp), cfg);
  }
  
  return rescaleEnsemUp(delta);
};

EnsemReal LuescherPhaseShiftEnsem::delta(EnsemReal E){
  //always shifts into -pi to pi region
  double pi = 2.0 * atan2(1.0 , 0.0);
  
  EnsemReal kk = k(E);
  EnsemReal k_scale = rescaleEnsemDown(kk);
 
  EnsemReal delta = Real(0.0) * k_scale;

  for(int cfg = 0; cfg < kk.size(); cfg++){
    double K = toDouble( peekEnsem(k_scale , cfg) );
    double tmp = - luPhi.phi( K * L / (2.0 * pi) );
    double tmp2 = fmod(tmp , pi); //shifts into the -pi to pi region
    
    pokeEnsem(delta, Real(tmp2), cfg);
  }
  
  return rescaleEnsemUp(delta);

};

EnsemReal LuescherPhaseShiftEnsem::k2Lp1cotdelta(EnsemReal E, int ang_mom){
  
  EnsemReal kk = k(E);
  EnsemReal d = delta(E);
  
  return pow(kk , (2*ang_mom +1) ) / tan(d);
};

EnsemReal LuescherPhaseShiftEnsem::phi(EnsemReal E){

  double pi = 2.0 * atan2(1.0 , 0.0);

  EnsemReal kk = k(E);
  EnsemReal k_scale = rescaleEnsemDown(kk);

  EnsemReal phi = Real(0.0)*kk;

  for(int cfg = 0; cfg < kk.size(); cfg++){
    double K = toDouble(peekEnsem(k_scale , cfg) );
    double tmp = luPhi.phi( K * L / (2.0 * pi) );
    pokeEnsem(phi, Real(tmp), cfg);
  }
  
  return rescaleEnsemUp(phi);
};

EnsemReal LuescherPhaseShiftEnsem::sigma(EnsemReal E){

  double pi = 2.0 * atan2(1.0 , 0.0);

  EnsemReal kk = k(E);
  EnsemReal k_scale = rescaleEnsemDown(kk);

  EnsemReal sigma = Real(0.0)*kk;

  for(int cfg = 0; cfg < kk.size(); cfg++){
    double K = toDouble(peekEnsem(k_scale , cfg) );
    double tmp = luPhi.sigma( K * L / (2.0 * pi) );
    pokeEnsem(sigma, Real(tmp), cfg);
  }
  
  return rescaleEnsemUp(sigma);
};
*/
